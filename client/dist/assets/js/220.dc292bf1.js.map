{"version":3,"file":"assets/js/220.dc292bf1.js","mappings":"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","sources":["webpack://client/./node_modules/@kurkle/color/dist/color.esm.js","webpack://client/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://client/./node_modules/chart.js/dist/chart.js","webpack://client/./src/views/index.vue","webpack://client/./src/views/index.vue?fb31"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<template>\n  <div class=\"home\">\n    <div class=\"page-wrapper\">\n      <div class=\"page-header d-print-none\">\n        <div class=\"container-xl\">\n          <div class=\"row g-2 align-items-center\">\n            <div class=\"col\">\n              <!-- Page pre-title -->\n              <div class=\"page-pretitle\">Overview</div>\n              <h2 class=\"page-title\">Dashboard</h2>\n            </div>\n            <!-- Page title actions -->\n            <div class=\"col-auto ms-auto d-print-none\">\n              <div class=\"btn-list\">\n                <a\n                  @click=\"goto_add()\"\n                  class=\"btn btn-primary d-none d-sm-inline-block add-new-partner\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#modal-report\"\n                >\n                  <!-- Download SVG icon from http://tabler-icons.io/i/plus -->\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    class=\"icon\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    stroke-width=\"2\"\n                    stroke=\"currentColor\"\n                    fill=\"none\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <path d=\"M12 5l0 14\" />\n                    <path d=\"M5 12l14 0\" />\n                  </svg>\n                  Add new partner\n                </a>\n                <span class=\"d-none d-sm-inline\">\n                  <a href=\"#\" class=\"btn logout\" @click=\"logOut()\"> Logout </a>\n                </span>\n                <div v-if=\"user.identity =='DB'\">\n                   \n                  <input type=\"file\" @change=\"uploadFile\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"page-body\">\n        <div class=\"container-xl\">\n          <div class=\"row row-deck row-cards\">\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Total Partners</div>\n                  </div>\n                  <div class=\"h1 mb-3\">{{ partners.length }}</div>\n                  <div class=\"d-flex mb-2\">\n                    <div>contact rate</div>\n                    <div class=\"ms-auto\">\n                      <span\n                        class=\"text-green d-inline-flex align-items-center lh-1\"\n                      >\n                        {{ contactPercentage }}%\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"progress progress-sm\">\n                    <div\n                      class=\"progress-bar bg-primary\"\n                      :style=\"{ width: contactPercentage + '%' }\"\n                      role=\"progressbar\"\n                      aria-valuenow=\"75\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-label=\"75% Complete\"\n                    >\n                      <span class=\"visually-hidden\">75% Complete</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">In collaboration</div>\n                    <div class=\"ms-auto lh-1\">\n                      <a\n                        class=\"dropdown-toggle text-secondary\"\n                        href=\"#\"\n                        data-bs-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        >{{ selectedCity }}</a\n                      >\n                      <div class=\"dropdown-menu dropdown-menu-end\">\n                        <a\n                          class=\"dropdown-item active\"\n                          @click=\"selectCity('SH')\"\n                          >SH</a\n                        >\n                        <a class=\"dropdown-item\" @click=\"selectCity('HZ')\"\n                          >HZ</a\n                        >\n                        <a class=\"dropdown-item\" @click=\"selectCity('BJ')\"\n                          >BJ</a\n                        >\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex\" style=\"align-items: center\">\n                    <div\n                      class=\"h1 mb-0 me-2\"\n                      style=\"width: 100px; height: 100px\"\n                    >\n                      <canvas ref=\"chart\"></canvas>\n                    </div>\n                    <div class=\"me-auto lh-1\">\n                      <span class=\"text-green\">\n                        <ul style=\"list-style-type: none; padding-left: 0\">\n                          <li\n                            v-for=\"(label, index) in labels\"\n                            :key=\"label\"\n                            style=\"\n                              display: flex;\n                              align-items: center;\n                              margin-bottom: 8px;\n                              font-size: 12px;\n                            \"\n                          >\n                            <div\n                              :style=\"{\n                                background: backgroundColors[index],\n                                width: '10px',\n                                height: '10px',\n                                marginRight: '10px',\n                              }\"\n                            ></div>\n                            {{ label }}\n                          </li>\n                        </ul>\n                        {{ currentData }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Vertical</div>\n                  </div>\n                  <div class=\"d-flex align-items-baseline\">\n                    <div class=\"h1 mb-3 me-2\" style=\"width:250px; height:120px\">\n                      <canvas ref=\"verticalChart\" width=\"220\" height=\"130\"></canvas>\n                    </div>\n                  </div>\n                  <div id=\"chart-new-clients\" class=\"chart-sm\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Active Partners</div>\n                    <div class=\"ms-auto lh-1\">\n                      <div class=\"dropdown\">\n                        <a\n                          class=\"dropdown-toggle text-secondary\"\n                          href=\"#\"\n                          data-bs-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          >Last 7 days</a\n                        >\n                        <div class=\"dropdown-menu dropdown-menu-end\">\n                          <a class=\"dropdown-item active\" href=\"#\"\n                            >Last 7 days</a\n                          >\n                          <a class=\"dropdown-item\" href=\"#\">Last 30 days</a>\n                          <a class=\"dropdown-item\" href=\"#\">Last 3 months</a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex align-items-baseline\">\n                    <div class=\"h1 mb-3 me-2\">Demo</div>\n                    <div class=\"me-auto\">\n                      <span\n                        class=\"text-green d-inline-flex align-items-center lh-1\"\n                      >\n                        4%\n                        <!-- Download SVG icon from http://tabler-icons.io/i/trending-up -->\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          class=\"icon ms-1\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          stroke-width=\"2\"\n                          stroke=\"currentColor\"\n                          fill=\"none\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M3 17l6 -6l4 4l8 -8\" />\n                          <path d=\"M14 7l7 0l0 7\" />\n                        </svg>\n                      </span>\n                    </div>\n                  </div>\n                  <div id=\"chart-active-users\" class=\"chart-sm\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-lg-6\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <h3 class=\"card-title\">Data Dashboard 1{{ verticalData }}</h3>\n                  <div id=\"chart-mentions\" class=\"chart-lg\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-6\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <h3 class=\"card-title\">Data Dashboard 2</h3>\n                  <div class=\"ratio ratio-21x9\">\n                    <div>\n                      <div id=\"map-world\" class=\"w-100 h-100\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h3 class=\"card-title\">Partner list</h3>\n                </div>\n                <div class=\"card-body border-bottom py-3\">\n                  <div class=\"d-flex\">\n                    <div class=\"text-secondary\">\n                      Show\n                      <div class=\"mx-2 d-inline-block\">\n                        <input\n                          type=\"text\"\n                          class=\"form-control form-control-sm\"\n                          value=\"8\"\n                          size=\"3\"\n                          aria-label=\"Invoices count\"\n                        />\n                      </div>\n                      entries\n                    </div>\n\n                    <div class=\"ms-auto text-secondary\">\n                      Search:\n                      <div class=\"ms-2 d-inline-block\">\n                        <input\n                          v-model=\"filterInput\"\n                          type=\"text\"\n                          class=\"form-control form-control-sm\"\n                          aria-label=\"Search invoice\"\n                        />\n                      </div>\n                    </div>\n                    <!-- <button\n                      class=\"btn btn-outline-success\"\n                      @click=\"exportToCSV()\"\n                    >\n                      export\n                    </button> -->\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <table\n                    class=\"table card-table table-vcenter text-nowrap datatable\"\n                  >\n                    <thead>\n                      <tr>\n                        <th class=\"w-1\">\n                          <input\n                            class=\"form-check-input m-0 align-middle\"\n                            type=\"checkbox\"\n                            aria-label=\"Select all invoices\"\n                          />\n                        </th>\n                        <th>Partner Type</th>\n                        <th>Partner Name</th>\n                        <th>2B/2C</th>\n                        <th>Vertical</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody v-if=\"user\">\n                      <tr v-for=\"partner in paginatedData\" :key=\"partner._id\">\n                        <td>\n                          <input\n                            class=\"form-check-input m-0 align-middle\"\n                            type=\"checkbox\"\n                            aria-label=\"Select invoice\"\n                          />\n                        </td>\n                        <td>\n                          {{ partner.third_partner_type }}\n                        </td>\n                        <td>\n                          <span class=\"flag flag-country-us\"></span>\n                          {{ partner.third_partner_name }}\n                        </td>\n                        <td>{{ partner.b2b_or_b2c }}</td>\n                        <td>{{ partner.vertical }}</td>\n                        <td class=\"text-end\">\n                          <router-link\n                            class=\"single-partner\"\n                            :to=\"'/single-partner/' + partner._id\"\n                          >\n                            <button\n                              class=\"btn btn-primary\"\n                              style=\"\n                                --bs-btn-padding-y: 0.25rem;\n                                --bs-btn-padding-x: 0.5rem;\n                                --bs-btn-font-size: 0.75rem;\n                              \"\n                            >\n                              detials\n                            </button>\n                          </router-link>\n                          <button\n                            class=\"btn btn-dark\"\n                            style=\"\n                              --bs-btn-padding-y: 0.25rem;\n                              --bs-btn-padding-x: 0.5rem;\n                              --bs-btn-font-size: 0.75rem;\n                            \"\n                            data-bs-toggle=\"dropdown\"\n                            @click.stop=\"deleteData(partner._id)\"\n                            v-if=\"user.identity == 'Super-Admin'\"\n                          >\n                            delete\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"card-footer d-flex align-items-center\">\n                  <p class=\"m-0 text-secondary\">\n                    Showing <span>1</span> to <span>8</span> of\n                    <span>16</span> entries\n                  </p>\n\n                  <ul class=\"pagination m-0 ms-auto\">\n                    <li\n                      class=\"page-item\"\n                      :class=\"{ disabled: currentPage === 1 }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\" \"\n                        @click.prevent=\"moveWindow(-1)\"\n                      >\n                        <!-- SVG for 'prev' ... -->\n                        prev\n                      </a>\n                    </li>\n\n                    <li\n                      class=\"page-item\"\n                      v-for=\"page in visiblePages\"\n                      :key=\"page\"\n                      :class=\"{ active: page === currentPage }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\"#\"\n                        @click.prevent=\"setCurrentPage(page)\"\n                        >{{ page }}</a\n                      >\n                    </li>\n\n                    <li\n                      class=\"page-item\"\n                      :class=\"{ disabled: currentPage === totalPages }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\" \"\n                        @click.prevent=\"moveWindow(1)\"\n                      >\n                        next\n                        <!-- SVG for 'next' ... -->\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { useRouter } from \"vue-router\";\nimport axios from \"../http\";\nimport { ref, computed, onMounted, watch, nextTick } from \"vue\";\nimport {\n  Chart,\n  DoughnutController,\n  BarController,\n  ArcElement,\n  CategoryScale,\n  Tooltip,\n  LinearScale,\n  BarElement,\n} from \"chart.js\";\nimport { useStore } from \"vuex\";\n\nChart.register(\n  DoughnutController,\n  BarController,\n  ArcElement,\n  CategoryScale,\n  Tooltip,\n  LinearScale,\n  BarElement\n);\n\nconst router = useRouter();\nconst store = useStore();\nconst partners = ref([]);\nconst filterInput = ref([]);\nconst exportsData = ref([]);\nconst currentPage = ref(1);\nconst itemsPerPage = ref(10);\nconst chart = ref(null);\n\nconst verticalChart = ref(null);\nconst labels = ref([\n  \"collaborating\",\n  \"pending collaboration\",\n  \"collaboration paused\",\n]);\nconst backgroundColors = ref([\"#0d6efd\", \"#3d8bfd\", \"#9ec5fe\"]);\nconst selectedCity = ref(\"SH\");\nconst chartInstance = ref(null); // 存储图表实例\nconst verticalChartInstance = ref(null);\n\nconst user = computed(() => store.getters.user);\n\nconst pageWindowStart = ref(1); // Start page for sliding window\nconst windowSize = ref(3); // Number of pages to display in the sliding window\n\nconst visiblePages = computed(() => {\n  let end = pageWindowStart.value + windowSize.value;\n  if (end > totalPages.value) end = totalPages.value;\n  return Array.from(\n    { length: end - pageWindowStart.value },\n    (_, i) => i + pageWindowStart.value\n  );\n});\n\nconst getData = () => {\n  axios\n    .get(\"api/partners\")\n    .then((res) => {\n      partners.value = res.data;\n    })\n    .catch((err) => console.log(err));\n};\n\nconst goto_add = () => {\n  router.push({ path: \"/add\" });\n};\n\nconst logOut = () => {\n  localStorage.removeItem(\"userToken\");\n  //config vuex store\n  store.dispatch(\"clearCurrentState\");\n  router.push({ path: \"/login\" });\n};\n\nconst deleteData = (id) => {\n  axios.delete(\"api/partners/delete/\" + id);\n  getData();\n};\n\nconst paginatedData = computed(() => {\n  const filtered = filteredData(partners.value, filterInput.value);\n  const start = (currentPage.value - 1) * itemsPerPage.value;\n  const end = currentPage.value * itemsPerPage.value;\n  return filtered.slice(start, end);\n});\n\nfunction setCurrentPage(page) {\n  currentPage.value = page;\n}\n\nfunction moveWindow(direction) {\n  const newStart = pageWindowStart.value + direction * windowSize.value;\n  if (newStart >= 1 && newStart + windowSize.value <= totalPages.value + 1) {\n    pageWindowStart.value = newStart;\n  }\n}\n\nconst totalPages = computed(() => {\n  return Math.ceil(\n    filteredData(partners.value, filterInput.value).length / itemsPerPage.value\n  );\n});\n\nconst filteredData = (partners, value) => {\n  const regex = new RegExp(value, \"i\");\n  return partners.filter((partner) =>\n    Object.values(partner).some(\n      (field) => typeof field === \"string\" && regex.test(field)\n    )\n  );\n};\n\nconst contactPercentage = computed(() => {\n  const partnersWithContact = partners.value.filter((partner) => {\n    const hasSHContact =\n      partner.sh_contact && Object.keys(partner.sh_contact).length > 0;\n    const hasHZContact =\n      partner.hz_contact && Object.keys(partner.hz_contact).length > 0;\n    const hasBJContact =\n      partner.bj_contact && Object.keys(partner.bj_contact).length > 0;\n    return hasSHContact || hasHZContact || hasBJContact;\n  }).length;\n\n  if (partners.value.length === 0) return 0;\n  const percentage = (partnersWithContact / partners.value.length) * 100;\n  return parseFloat(percentage.toFixed(2));\n});\n\nconst selectCity = (city) => {\n  selectedCity.value = city;\n};\n\nconst currentData = computed(() => {\n  if (!partners.value || partners.value.length === 0) return [0, 0, 0];\n\n  const statusMapping = {\n    \"A. 待合作\": \"待合作\",\n    \"C. 合作中\": \"合作中\",\n    \"B. 合作暂停\": \"暂停合作\",\n  };\n  const counts = {\n    合作中: 0,\n    待合作: 0,\n    暂停合作: 0,\n  };\n\n  partners.value.forEach((partner) => {\n    let trackingProcess;\n\n    switch (selectedCity.value) {\n      case \"SH\":\n        trackingProcess = partner.SH_tracking_process || null;\n        break;\n      case \"HZ\":\n        trackingProcess = partner.HZ_tracking_process || null;\n        break;\n      case \"BJ\":\n        trackingProcess = partner.BJ_tracking_process || null;\n        break;\n      default:\n        trackingProcess = null;\n    }\n\n    if (trackingProcess && statusMapping[trackingProcess]) {\n      const key = statusMapping[trackingProcess];\n      if (counts[key] !== undefined) {\n        counts[key]++;\n      }\n    }\n  });\n  return [counts[\"合作中\"], counts[\"待合作\"], counts[\"暂停合作\"]];\n});\n\nconst initChart = () => {\n  const ctx = chart.value.getContext(\"2d\");\n  chartInstance.value = new Chart(ctx, {\n    type: \"doughnut\",\n    data: {\n      labels: labels.value,\n      datasets: [\n        {\n          data: currentData.value, // 注意这里使用 `.value` 获取计算属性的值\n          backgroundColor: backgroundColors.value,\n        },\n      ],\n    },\n    options: {\n      cutout: \"80%\",\n      responsive: true,\n      maintainAspectRatio: false,\n    },\n  });\n};\n//verical chart\nconst createChart = () => {\n  const frequencyMap = new Map();\n\n  for (const partner of partners.value) {\n    if (partner && partner.vertical) {\n      const count = frequencyMap.get(partner.vertical) || 0;\n      frequencyMap.set(partner.vertical, count + 1);\n    }\n  }\n\n  const verticalLabels = Array.from(frequencyMap.keys());\n  const verticalData = Array.from(frequencyMap.values());\n\n  if (verticalChartInstance.value) {\n    verticalChartInstance.value.destroy();\n  }\n  const ctx2 = verticalChart.value.getContext(\"2d\");\n  verticalChartInstance.value = new Chart(ctx2, {\n    type: \"bar\",\n    data: {\n      labels: verticalLabels,\n      datasets: [\n        {\n          label: \"Count\",\n          data: verticalData,\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n          borderColor: \"rgba(75, 192, 192, 1)\",\n          borderWidth: 1,\n        },\n      ],\n    },\n    options: {\n      responsive:false,\n      scales: {\n        x: {\n          type: \"category\",\n          maxBarThickness:10,\n        },\n        y: {\n          type: \"linear\",\n          title: {\n            display: true,\n            text: \"Count\",\n          },\n          beginAtZero: true,\n        },\n      },\n    },\n  });\n};\n\nonMounted(() => {\n  const fetchDataAndInitChart = async () => {\n    await getData();\n    initChart();\n  };\n  fetchDataAndInitChart();\n});\n\nwatch(currentData, (newData) => {\n  if (chartInstance.value) {\n    chartInstance.value.destroy(); // 销毁旧实例\n    // 重新实例化新图表\n    const ctx = chart.value.getContext(\"2d\");\n    chartInstance.value = new Chart(ctx, {\n      type: \"doughnut\",\n      data: {\n        labels: labels.value,\n        datasets: [{ data: newData, backgroundColor: backgroundColors.value }],\n      },\n      options: {\n        cutout: \"80%\",\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    });\n  }\n});\nwatch(\n  partners,\n  (newVal) => {\n    if (newVal && newVal.length > 0) {\n      createChart();\n    }\n  },\n  { deep: true }\n);\n\nconst uploadFile = async (event) => {\n  const file = event.target.files[0];\n  const formData = new FormData();\n  formData.append(\"csv\", file);\n  try {\n    await axios.post(\"api/partners/upload\", formData);\n    alert(\"上传成功！\");\n  } catch (err) {\n    alert(\"上传失败：\" + err.message);\n  }\n};\n\nconst exportToCSV = () => {\n  axios\n    .get(\"api/partners/export\")\n    .then((res) => {\n      this.exportsData = res.data;\n      const csv = [];\n      const headers = Object.keys(this.exportsData[0]);\n      csv.push(headers.join(\",\")); // 添加表头行\n\n      for (const partner of this.exportsData) {\n        const row = [];\n        for (const header of headers) {\n          const value = partner[header] !== undefined ? partner[header] : \"\"; // 如果值为 undefined，则使用空字符串\n          row.push(value);\n        }\n        csv.push(row.join(\",\")); // 添加每条数据的行\n      }\n\n      const csvContent = csv.join(\"\\n\");\n      const blob = new Blob([csvContent], {\n        type: \"text/csv;charset=utf-8;\",\n      });\n\n      const downloadLink = document.createElement(\"a\");\n      const url = URL.createObjectURL(blob);\n\n      downloadLink.href = url;\n      downloadLink.download = \"data.csv\";\n      downloadLink.click();\n\n      URL.revokeObjectURL(url);\n    })\n    .catch((err) => console.log(err));\n};\n</script>\n\n<style scoped>\n.page-wrapper {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n.page-body {\n  margin-top: 1.25rem;\n  margin-bottom: 1.25rem;\n}\n@media (min-width: 1200px) {\n  .container,\n  .container-lg,\n  .container-md,\n  .container-sm,\n  .container-xl {\n    max-width: 1199px;\n  }\n}\n.container,\n.container-fluid,\n.container-lg,\n.container-md,\n.container-sm,\n.container-xl,\n.container-xxl {\n  width: 100%;\n  padding-right: var(--tblr-gutter-x, 0.5rem);\n  padding-left: var(--tblr-gutter-x, 0.5rem);\n  margin-right: auto;\n  margin-left: auto;\n}\n.row-deck > .col,\n.row-deck > [class*=\"col-\"] {\n  display: flex;\n  align-items: stretch;\n}\n.row > * {\n  min-width: 0;\n}\n.row-deck > .col .card,\n.row-deck > [class*=\"col-\"] .card {\n  flex: 1 1 auto;\n}\n.card {\n  box-shadow: rgba(35, 46, 60, 0.04) 0 2px 4px 0;\n  border: 1px solid rgba(101, 109, 119, 0.16);\n}\n@media (min-width: 992px) {\n  .col-lg-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n}\n@media (min-width: 992px) {\n  .col-lg-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n}\n.row-cards .row-cards {\n  flex: 1;\n}\n.row-cards {\n  --tblr-gutter-x: 1rem;\n  --tblr-gutter-y: 1rem;\n}\n.row > * {\n  max-width: 100%;\n  padding-right: calc(var(--tblr-gutter-x) / 2);\n  padding-left: calc(var(--tblr-gutter-x) / 2);\n  margin-top: var(--tblr-gutter-y);\n}\n.card-header:first-child {\n  border-radius: 3px 3px 0 0;\n}\n.position-relative {\n  position: relative !important;\n}\n.page-pretitle {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #656d77;\n  display: flex;\n}\n.page-title {\n  margin: 0;\n  font-size: 1.25rem;\n  line-height: 1.4;\n  font-weight: 500;\n  color: inherit;\n  display: flex;\n  align-items: center;\n}\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  border-color: rgba(101, 109, 119, 0.24);\n  white-space: nowrap;\n}\n.btn-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -0.5rem !important;\n  margin-right: -0.5rem;\n}\n.btn-list > * {\n  margin: 0 0.5rem 0.5rem 0 !important;\n}\n.logout {\n  background-color: #fff;\n  color: #216bc4;\n}\n.add-new-partner {\n  background-color: #216bc4;\n  color: #f4f6fa;\n}\n.btn .icon {\n  width: 1.25rem;\n  height: 1.25rem;\n  min-width: 1.25rem;\n  margin: 0 0.5rem 0 -0.25rem;\n  vertical-align: middle;\n}\n@media (min-width: 576px) {\n  .d-sm-inline {\n    display: inline !important;\n  }\n}\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=9013b0e6&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jiandongz/Desktop/vue-partner-system/vue3-deploy/client/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9013b0e6\"]])\n\nexport default __exports__"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","right","bottom","left","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","plugin_tooltip","_element","afterInit","_args","afterDraw","afterEvent","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","LogarithmicScale","_zero","changeExponent","generateTicks","RadialLinearScale","animate","angleLines","pointLabels","centerPointLabels","xCenter","yCenter","drawingArea","_pointLabels","_pointLabelItems","_padding","getTickBackdropHeight","fitWithPointLabels","setCenterPoint","leftMovement","rightMovement","topMovement","bottomMovement","getIndexAngle","angleMultiplier","getDistanceFromCenterForValue","scalingFactor","getValueForDistanceFromCenter","scaledDistance","getPointLabelContext","pointLabel","createPointLabelContext","getPointPosition","distanceFromCenter","additionalAngle","getPointPositionForValue","getBasePosition","getPointLabelPosition","pathRadiusLine","drawPointLabels","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","router","useRouter","store","useStore","partners","ref","filterInput","currentPage","itemsPerPage","verticalChart","backgroundColors","selectedCity","chartInstance","verticalChartInstance","user","computed","getters","pageWindowStart","windowSize","visiblePages","totalPages","_","getData","axios","catch","err","log","goto_add","path","logOut","localStorage","removeItem","dispatch","deleteData","paginatedData","filtered","filteredData","setCurrentPage","page","moveWindow","newStart","regex","RegExp","partner","test","contactPercentage","partnersWithContact","hasSHContact","sh_contact","hasHZContact","hz_contact","hasBJContact","bj_contact","percentage","toFixed","selectCity","city","currentData","statusMapping","counts","合作中","待合作","暂停合作","trackingProcess","SH_tracking_process","HZ_tracking_process","BJ_tracking_process","initChart","createChart","frequencyMap","verticalLabels","verticalData","ctx2","onMounted","fetchDataAndInitChart","async","watch","newData","newVal","deep","uploadFile","file","files","formData","FormData","append","alert","message","__exports__"],"sourceRoot":""}