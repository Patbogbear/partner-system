{"version":3,"file":"assets/js/288.749bcd59.js","mappings":"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","sources":["webpack://client/./src/views/DeleteDialog.vue","webpack://client/./src/views/DeleteDialog.vue?292c","webpack://client/./node_modules/@kurkle/color/dist/color.esm.js","webpack://client/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://client/./node_modules/chart.js/dist/chart.js","webpack://client/./src/views/index.vue","webpack://client/./src/views/index.vue?fb31"],"sourcesContent":["<template>\n  <div v-if=\"visible\" class=\"confirm-dialog-overlay\">\n    <div class=\"confrim-dialog\">\n      <h3 class=\"context\">请问是否确认删除此Partner</h3>\n      <button @click=\"confirm\" class=\"btn btn-primary btn-sm\">确定</button>\n      <button class=\"btn btn-secondary\" @click=\"cancel\">取消</button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { watch, ref, defineProps, defineEmits } from \"vue\";\n\n\nconst emit = defineEmits([\"confirm\"]);\n\nconst visible = ref(false);\n\nconst show = () => {\n  visible.value = true;\n};\n\nconst confirm = () => {\n  emit(\"confirm\");\n  visible.value = false;\n};\n\nconst cancel = () => {\n  visible.value = false;\n};\n\ndefineExpose({ show });\n</script>\n<style scoped>\n.confirm-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* 半透明黑色背景 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.context{\n    color: black;\n\n}\n.confrim-dialog {\n  background-color: white; /* 添加背景色 */\n  padding: 20px; /* 添加内边距 */\n  border-radius: 10px; /* 圆角 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\n}\n\nbutton {\n  margin: 10px; /* 增加边距 */\n  border: none; /* 移除边框 */\n  padding: 10px 20px; /* 增加填充 */\n  border-radius: 5px; /* 圆角按钮 */\n  cursor: pointer; /* 手型光标 */\n}\n\n.btn-primary {\n  background-color: #007bff; /* 主题蓝色 */\n  color: white; /* 文字颜色 */\n}\n\n.btn-primary:hover {\n  background-color: #0056b3; /* 悬停时颜色加深 */\n}\n\nbutton:hover {\n  opacity: 0.8; /* 所有按钮悬停时透明度降低 */\n}\n</style>","import script from \"./DeleteDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeleteDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DeleteDialog.vue?vue&type=style&index=0&id=4dcdf0fc&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jiandongz/Desktop/vue-partner-system/vue3-deploy/client/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4dcdf0fc\"]])\n\nexport default __exports__","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<template>\n  <div class=\"home\">\n    <div class=\"page-wrapper\">\n      <div class=\"page-header d-print-none\">\n        <div class=\"container-xl\">\n          <div class=\"row g-2 align-items-center\">\n            <div class=\"col\">\n              <!-- Page pre-title -->\n              <div class=\"page-pretitle\">Overview</div>\n              <h2 class=\"page-title\">Dashboard</h2>\n            </div>\n            <!-- Page title actions -->\n            <div class=\"col-auto ms-auto d-print-none\">\n              <div class=\"btn-list\">\n                <a\n                  @click=\"goto_add()\"\n                  class=\"btn btn-primary d-none d-sm-inline-block add-new-partner\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#modal-report\"\n                >\n                  <!-- Download SVG icon from http://tabler-icons.io/i/plus -->\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    class=\"icon\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    stroke-width=\"2\"\n                    stroke=\"currentColor\"\n                    fill=\"none\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <path d=\"M12 5l0 14\" />\n                    <path d=\"M5 12l14 0\" />\n                  </svg>\n                  Add new partner\n                </a>\n                <span class=\"d-none d-sm-inline\">\n                  <a href=\"#\" class=\"btn logout\" @click=\"logOut()\"> Logout </a>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"page-body\">\n        <div class=\"container-xl\">\n          <div class=\"row row-deck row-cards\">\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Total Partners</div>\n                  </div>\n                  <div class=\"h1 mb-3\">{{ partners.length }}</div>\n                  <div class=\"d-flex mb-2\">\n                    <div>contact rate</div>\n                    <div class=\"ms-auto\">\n                      <span\n                        class=\"text-green d-inline-flex align-items-center lh-1\"\n                      >\n                        {{ contactPercentage }}%\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"progress progress-sm\">\n                    <div\n                      class=\"progress-bar bg-primary\"\n                      :style=\"{ width: contactPercentage + '%' }\"\n                      role=\"progressbar\"\n                      aria-valuenow=\"75\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-label=\"75% Complete\"\n                    >\n                      <span class=\"visually-hidden\">75% Complete</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">In collaboration</div>\n                    <div class=\"ms-auto lh-1\">\n                      <a\n                        class=\"dropdown-toggle text-secondary\"\n                        href=\"#\"\n                        data-bs-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        >{{ selectedCity }}</a\n                      >\n                      <div class=\"dropdown-menu dropdown-menu-end\">\n                        <a\n                          class=\"dropdown-item active\"\n                          @click=\"selectCity('SH')\"\n                          >SH</a\n                        >\n                        <a class=\"dropdown-item\" @click=\"selectCity('HZ')\"\n                          >HZ</a\n                        >\n                        <a class=\"dropdown-item\" @click=\"selectCity('BJ')\"\n                          >BJ</a\n                        >\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex\" style=\"align-items: center\">\n                    <div\n                      class=\"h1 mb-0 me-2\"\n                      style=\"width: 100px; height: 100px\"\n                    >\n                      <canvas ref=\"chart\"></canvas>\n                    </div>\n                    <div class=\"me-auto lh-1\">\n                      <span class=\"text-green\">\n                        <ul style=\"list-style-type: none; padding-left: 0\">\n                          <li\n                            v-for=\"(label, index) in labels\"\n                            :key=\"label\"\n                            style=\"\n                              display: flex;\n                              align-items: center;\n                              margin-bottom: 8px;\n                              font-size: 12px;\n                            \"\n                          >\n                            <div\n                              :style=\"{\n                                background: backgroundColors[index],\n                                width: '10px',\n                                height: '10px',\n                                marginRight: '10px',\n                              }\"\n                            ></div>\n                            {{ label }}\n                          </li>\n                        </ul>\n                        {{ currentData }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Vertical</div>\n                  </div>\n                  <div class=\"d-flex align-items-baseline\">\n                    <div\n                      class=\"h1 mb-3 me-2\"\n                      style=\"width: 250px; height: 120px\"\n                    >\n                      <canvas\n                        ref=\"verticalChart\"\n                        width=\"220\"\n                        height=\"130\"\n                      ></canvas>\n                    </div>\n                  </div>\n                  <div id=\"chart-new-clients\" class=\"chart-sm\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">New Partners</div>\n                    <div class=\"ms-auto lh-1\">\n                      <div class=\"dropdown\">\n                        <a\n                          class=\"text-secondary\"\n                          href=\"#\"\n                          data-bs-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          >Last {{ selectedDays }} days</a\n                        >\n                        <div class=\"dropdown-menu dropdown-menu-end\">\n                          <!-- <a class=\"dropdown-item active\" @click=\"selectedDays=7\">Last 7 days</a>\n                          <a class=\"dropdown-item\" @click=\"selectedDays=30\">Last 30 days</a>\n                          <a class=\"dropdown-item\" @click=\"selectedDays=90\">Last 90 days</a> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex align-items-baseline\">\n                    <div class=\"me-auto\">\n                      <canvas\n                        ref=\"newPartnersChart\"\n                        width=\"220\"\n                        height=\"130\"\n                      ></canvas>\n                    </div>\n                  </div>\n                  <div id=\"chart-active-users\" class=\"chart-sm\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div\n              class=\"col-lg-6\"\n              v-if=\"\n                user.identity == 'Super-Admin' ||\n                user.identity == 'PM' ||\n                user.identity == 'Team-Leader'\n              \"\n            >\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <h4 class=\"subheader\">Partner Marketing Data</h4>\n                    <div class=\"ms-auto lh-1\"></div>\n\n                    <a\n                      class=\"dropdown-toggle\"\n                      href=\"#\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                      >Cluster {{ dashboardCity }} Data</a\n                    >\n                    <div class=\"dropdown-menu dropdown-menu-end\">\n                      <a\n                        class=\"dropdown-item active\"\n                        @click=\"dashboardCity = 'SH'\"\n                        >SH</a\n                      >\n                      <a class=\"dropdown-item\" @click=\"dashboardCity = 'HZ'\"\n                        >HZ</a\n                      >\n                      <a class=\"dropdown-item\" @click=\"dashboardCity = 'BJ'\"\n                        >BJ</a\n                      >\n                    </div>\n                  </div>\n                  <div id=\"chart-mentions\" class=\"chart-lg\">\n                    <canvas ref=\"dashboardOnePartnerType\"></canvas>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"col-lg-6\"\n              v-if=\"\n                user.identity == 'Super-Admin' ||\n                user.identity == 'PM' ||\n                user.identity == 'Team-Leader'\n              \"\n            >\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <h6 class=\"card-title\">\n                    Cluster {{ dashboardCity }} & Partner Type:\n                    <strong>{{ dashboardSelectType }}</strong>\n                  </h6>\n                  <div class=\"ratio ratio-21x9\">\n                    <div>\n                      <div id=\"map-world\" class=\"w-100 h-100\">\n                        <canvas ref=\"dashboardTwoPartnerData\"></canvas>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button\n              v-if=\"user.identity === 'Super-Admin' || user.identity === 'BA'\"\n              class=\"btn btn-outline-success\"\n              @click=\"exportToCSV()\"\n            >\n              export marketing data\n            </button>\n            <!-- <span v-if=\"user.identity === 'DB' || user.identity ==='Super-Admin'\"> upload marketing data\n                  <input type=\"file\" @change=\"uploadFile\" />\n                </span> -->\n            <div class=\"col-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h3 class=\"card-title\">Partner list</h3>\n                </div>\n                <div class=\"card-body border-bottom py-3\">\n                  <div class=\"d-flex\">\n                    <div class=\"text-secondary\">\n                      Show\n                      <div class=\"mx-2 d-inline-block\">\n                        <input\n                          type=\"text\"\n                          class=\"form-control form-control-sm\"\n                          value=\"8\"\n                          size=\"3\"\n                          aria-label=\"Invoices count\"\n                        />\n                      </div>\n                      entries\n                    </div>\n\n                    <div class=\"ms-auto text-secondary\">\n                      Search:\n                      <div class=\"ms-2 d-inline-block\">\n                        <input\n                          v-model=\"filterInput\"\n                          type=\"text\"\n                          class=\"form-control form-control-sm\"\n                          aria-label=\"Search invoice\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <table\n                    class=\"table card-table table-vcenter text-nowrap datatable\"\n                  >\n                    <thead>\n                      <tr>\n                        <th class=\"w-1\">\n                          <input\n                            class=\"form-check-input m-0 align-middle\"\n                            type=\"checkbox\"\n                            aria-label=\"Select all invoices\"\n                          />\n                        </th>\n                        <th>Partner Type</th>\n                        <th>Partner Name</th>\n                        <th>2B/2C</th>\n                        <th>Vertical</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody v-if=\"user\">\n                      <tr v-for=\"partner in paginatedData\" :key=\"partner._id\">\n                        <td>\n                          <input\n                            class=\"form-check-input m-0 align-middle\"\n                            type=\"checkbox\"\n                            aria-label=\"Select invoice\"\n                          />\n                        </td>\n                        <td>\n                          {{ partner.third_partner_type }}\n                        </td>\n                        <td>\n                          <span class=\"flag flag-country-us\"></span>\n                          {{ partner.third_partner_name }}\n                        </td>\n                        <td>{{ partner.b2b_or_b2c }}</td>\n                        <td>{{ partner.vertical }}</td>\n                        <td class=\"text-end\">\n                          <router-link\n                            class=\"single-partner\"\n                            :to=\"'/single-partner/' + partner._id\"\n                          >\n                            <button\n                              class=\"btn btn-primary\"\n                              style=\"\n                                --bs-btn-padding-y: 0.25rem;\n                                --bs-btn-padding-x: 0.5rem;\n                                --bs-btn-font-size: 0.75rem;\n                              \"\n                            >\n                              detials\n                            </button>\n                          </router-link>\n                          <button\n                            class=\"btn btn-dark\"\n                            style=\"\n                              --bs-btn-padding-y: 0.25rem;\n                              --bs-btn-padding-x: 0.5rem;\n                              --bs-btn-font-size: 0.75rem;\n                            \"\n                            data-bs-toggle=\"dropdown\"\n                            @click=\"() => showDeleteDialog(partner._id)\"\n                            v-if=\"\n                              user.identity == 'Super-Admin' ||\n                              user.identity == 'PM'\n                            \"\n                          >\n                            delete\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"card-footer d-flex align-items-center\">\n                  <p class=\"m-0 text-secondary\">\n                    Showing <span>1</span> to <span>8</span> of\n                    <span>16</span> entries\n                  </p>\n\n                  <ul class=\"pagination m-0 ms-auto\">\n                    <li\n                      class=\"page-item\"\n                      :class=\"{ disabled: currentPage === 1 }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\" \"\n                        @click.prevent=\"moveWindow(-1)\"\n                      >\n                        <!-- SVG for 'prev' ... -->\n                        prev\n                      </a>\n                    </li>\n\n                    <li\n                      class=\"page-item\"\n                      v-for=\"page in visiblePages\"\n                      :key=\"page\"\n                      :class=\"{ active: page === currentPage }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\"#\"\n                        @click.prevent=\"setCurrentPage(page)\"\n                        >{{ page }}</a\n                      >\n                    </li>\n\n                    <li\n                      class=\"page-item\"\n                      :class=\"{ disabled: currentPage === totalPages }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\" \"\n                        @click.prevent=\"moveWindow(1)\"\n                      >\n                        next\n                        <!-- SVG for 'next' ... -->\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <DeleteDialog ref=\"ConfirmDeleteDialogRef\" @confirm=\"deleteData()\">\n  </DeleteDialog>\n</template>\n<script setup>\nimport { useRouter } from \"vue-router\";\nimport axios from \"../http\";\nimport { ref, computed, onMounted, watch, nextTick } from \"vue\";\nimport {\n  Chart,\n  DoughnutController,\n  BarController,\n  ArcElement,\n  CategoryScale,\n  Tooltip,\n  LinearScale,\n  BarElement,\n  LineController,\n  PointElement,\n  LineElement,\n  elements,\n} from \"chart.js\";\nimport { useStore } from \"vuex\";\n\nChart.register(\n  DoughnutController,\n  BarController,\n  ArcElement,\n  CategoryScale,\n  Tooltip,\n  LinearScale,\n  BarElement,\n  LineController,\n  PointElement,\n  LineElement\n);\n\nimport DeleteDialog from \"./DeleteDialog.vue\";\n\nconst ConfirmDeleteDialogRef = ref(null);\nconst deleteDialogId = ref(\"\");\n\nconst router = useRouter();\nconst store = useStore();\nconst partners = ref([]);\nconst filterInput = ref([]);\nconst user = computed(() => store.getters.user);\n\nconst exportsData = ref([]);\nconst currentPage = ref(1);\nconst pageWindowStart = ref(1); // Start page for sliding window\nconst windowSize = ref(3); // Number of pages to display in the sliding window\n\nconst itemsPerPage = ref(10);\nconst chart = ref(null);\nconst verticalChart = ref(null);\nconst labels = ref([\n  \"collaborating\",\n  \"pending collaboration\",\n  \"collaboration paused\",\n]);\nconst backgroundColors = ref([\"#0d6efd\", \"#3d8bfd\", \"#9ec5fe\"]);\nconst selectedCity = ref(\"SH\");\nconst chartInstance = ref(null); // 存储图表实例\nconst verticalChartInstance = ref(null);\n\nconst selectedDays = ref(90);\nconst newPartnersChart = ref(null);\nlet newPartnersChartInstance = ref(null);\n\nconst dashboardOnePartnerType = ref(null);\nlet dashboardOnePartnerTypeInstance = ref(null);\nconst dashboardCity = ref(\"SH\");\n\nconst dashboardTwoPartnerData = ref(null);\nlet dashboardTwoPartnerDataInstance = ref(null);\n//图表二初始化的时候，head中默认展示 third_partner_type字段的初始化值，因没有及时处理，默认手动硬编码“Click On The Left Bar To change Data”\nconst dashboardSelectType = ref(\"Click On The Left Bar To change Data \");\n\nconst getData = async () => {\n  try {\n    const response = await axios.get(\"api/partners\");\n    partners.value = response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst goto_add = () => {\n  router.push({ path: \"/add\" });\n};\n\nconst logOut = () => {\n  localStorage.removeItem(\"userToken\");\n  //config vuex store\n  store.dispatch(\"clearCurrentState\");\n  router.push({ path: \"/login\" });\n};\n\nconst showDeleteDialog = async (value) => {\n  deleteDialogId.value = value;\n  ConfirmDeleteDialogRef.value.show();\n};\n\nconst deleteData = () => {\n  const deleteID = deleteDialogId.value;\n  axios.delete(\"api/partners/delete/\" + deleteID);\n  getData();\n};\n\n//分页\nconst visiblePages = computed(() => {\n  let end = pageWindowStart.value + windowSize.value;\n  if (end > totalPages.value) end = totalPages.value;\n  return Array.from(\n    { length: end - pageWindowStart.value },\n    (_, i) => i + pageWindowStart.value\n  );\n});\n\nconst paginatedData = computed(() => {\n  const filtered = filteredData(partners.value, filterInput.value);\n  const start = (currentPage.value - 1) * itemsPerPage.value;\n  const end = currentPage.value * itemsPerPage.value;\n  return filtered.slice(start, end);\n});\n\nfunction setCurrentPage(page) {\n  currentPage.value = page;\n}\n\nfunction moveWindow(direction) {\n  const newStart = pageWindowStart.value + direction * windowSize.value;\n  if (newStart >= 1 && newStart + windowSize.value <= totalPages.value + 1) {\n    pageWindowStart.value = newStart;\n  }\n}\n\nconst totalPages = computed(() => {\n  return Math.ceil(\n    filteredData(partners.value, filterInput.value).length / itemsPerPage.value\n  );\n});\n\n//筛选器\nconst filteredData = (partners, value) => {\n  const regex = new RegExp(value, \"i\");\n  return partners.filter((partner) =>\n    Object.values(partner).some(\n      (field) => typeof field === \"string\" && regex.test(field)\n    )\n  );\n};\n\n//chart 1 数据处理\nconst contactPercentage = computed(() => {\n  const partnersWithContact = partners.value.filter((partner) => {\n    const hasSHContact =\n      partner.sh_contact && Object.keys(partner.sh_contact).length > 0;\n    const hasHZContact =\n      partner.hz_contact && Object.keys(partner.hz_contact).length > 0;\n    const hasBJContact =\n      partner.bj_contact && Object.keys(partner.bj_contact).length > 0;\n    return hasSHContact || hasHZContact || hasBJContact;\n  }).length;\n\n  if (partners.value.length === 0) return 0;\n  const percentage = (partnersWithContact / partners.value.length) * 100;\n  return parseFloat(percentage.toFixed(2));\n});\n\n//chart 2 数据处理\nconst selectCity = (city) => {\n  selectedCity.value = city;\n};\n\nconst currentData = computed(() => {\n  if (!partners.value || partners.value.length === 0) return [0, 0, 0];\n\n  const statusMapping = {\n    \"A. 待合作\": \"待合作\",\n    \"C. 合作中\": \"合作中\",\n    \"B. 合作暂停\": \"暂停合作\",\n  };\n  const counts = {\n    合作中: 0,\n    待合作: 0,\n    暂停合作: 0,\n  };\n\n  partners.value.forEach((partner) => {\n    let trackingProcess;\n\n    switch (selectedCity.value) {\n      case \"SH\":\n        trackingProcess = partner.SH_tracking_process || null;\n        break;\n      case \"HZ\":\n        trackingProcess = partner.HZ_tracking_process || null;\n        break;\n      case \"BJ\":\n        trackingProcess = partner.BJ_tracking_process || null;\n        break;\n      default:\n        trackingProcess = null;\n    }\n\n    if (trackingProcess && statusMapping[trackingProcess]) {\n      const key = statusMapping[trackingProcess];\n      if (counts[key] !== undefined) {\n        counts[key]++;\n      }\n    }\n  });\n  return [counts[\"合作中\"], counts[\"待合作\"], counts[\"暂停合作\"]];\n});\n\n//chart 1\nconst initChart = () => {\n  const ctx = chart.value.getContext(\"2d\");\n  chartInstance.value = new Chart(ctx, {\n    type: \"doughnut\",\n    data: {\n      labels: labels.value,\n      datasets: [\n        {\n          data: currentData.value, // 注意这里使用 `.value` 获取计算属性的值\n          backgroundColor: backgroundColors.value,\n        },\n      ],\n    },\n    options: {\n      cutout: \"80%\",\n      responsive: true,\n      maintainAspectRatio: false,\n    },\n  });\n};\n//verical chart\nconst createChart = () => {\n  const frequencyMap = new Map();\n\n  for (const partner of partners.value) {\n    if (partner && partner.vertical) {\n      const count = frequencyMap.get(partner.vertical) || 0;\n      frequencyMap.set(partner.vertical, count + 1);\n    }\n  }\n\n  const verticalLabels = Array.from(frequencyMap.keys());\n  const verticalData = Array.from(frequencyMap.values());\n\n  if (verticalChartInstance.value) {\n    verticalChartInstance.value.destroy();\n  }\n  const ctx2 = verticalChart.value.getContext(\"2d\");\n  verticalChartInstance.value = new Chart(ctx2, {\n    type: \"bar\",\n    data: {\n      labels: verticalLabels,\n      datasets: [\n        {\n          label: \"Count\",\n          data: verticalData,\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n          borderColor: \"rgba(75, 192, 192, 1)\",\n          borderWidth: 1,\n        },\n      ],\n    },\n    options: {\n      responsive: false,\n      scales: {\n        x: {\n          type: \"category\",\n          maxBarThickness: 10,\n        },\n        y: {\n          type: \"linear\",\n          title: {\n            display: true,\n            text: \"Count\",\n          },\n          beginAtZero: true,\n        },\n      },\n    },\n  });\n};\n//chart 4\nconst updateChart = () => {\n  if (newPartnersChartInstance && newPartnersChartInstance.value) {\n    // 根据 selectedDays 计算数据\n    const newData = countNewPartners(selectedDays);\n    // 更新图表实例的数据\n    newPartnersChartInstance.value.data.datasets[0].data = newData;\n\n    // 重绘图表以显示新数据\n    newPartnersChartInstance.value.update();\n  }\n};\n\n//chart 4\nconst countNewPartners = (days) => {\n  const now = new Date();\n  // 创建 UTC 时间的 cutoffDate\n  const cutoffDate = new Date(\n    Date.UTC(\n      now.getUTCFullYear(),\n      now.getUTCMonth(),\n      now.getUTCDate() - days,\n      0,\n      0,\n      0\n    )\n  );\n  const filteredPartners = partners.value.filter(\n    (partner) => new Date(partner.date) >= cutoffDate\n  );\n  return filteredPartners.length;\n};\n\n//chart 4\nconst createNewPartnersChart = () => {\n  const ctx = newPartnersChart.value.getContext(\"2d\");\n  newPartnersChartInstance = new Chart(ctx, {\n    type: \"line\",\n    data: {\n      labels: [\"Last 7 Days\", \"Last 30 Days\", \"Last 90 Days\"],\n      datasets: [\n        {\n          label: \"New Partners\",\n          data: [\n            countNewPartners(7),\n            countNewPartners(30),\n            countNewPartners(90),\n          ],\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n          ],\n          borderColor: [\n            \"rgba(255, 99, 132, 1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  });\n};\n\n//dashboard 1\nconst prepareChartData = (dashboardCity) => {\n  const leadsField = `${dashboardCity.toLowerCase()}_marketing_data_leads`;\n  const dataField = `${dashboardCity.toLowerCase()}_marketing_data`;\n\n  const groupedData = partners.value.reduce((acc, partner) => {\n    const type = partner.third_partner_type;\n    if (!acc[type]) {\n      acc[type] = { totalLeads: 0, weightedDataSum: 0 };\n    }\n\n    const leads = Number(partner[leadsField]) || 0;\n    const dataFieldValue = partner[dataField];\n    const dataPercentage = dataFieldValue\n      ? parseFloat(dataFieldValue.replace(\"%\", \"\"))\n      : 0;\n\n    acc[type].totalLeads += leads;\n    acc[type].weightedDataSum += (leads * dataPercentage) / 100;\n\n    return acc;\n  }, {});\n\n  const chartData = Object.entries(groupedData).map(([type, data]) => ({\n    type: type,\n    leads: data.totalLeads,\n    dataPercentage:\n      data.totalLeads > 0 ? (data.weightedDataSum / data.totalLeads) * 100 : 0,\n  }));\n\n  chartData.sort((a, b) => b.leads - a.leads);\n  return chartData;\n};\n\nconst updateDashboardChart = (value) => {\n  if (\n    !dashboardOnePartnerTypeInstance ||\n    !dashboardOnePartnerTypeInstance.data\n  ) {\n    console.error(\"Chart instance or chart data is undefined\");\n    return;\n  }\n\n  let chartData = prepareChartData(value);\n  dashboardOnePartnerTypeInstance.data.labels = chartData.map(\n    (item) => item.type\n  );\n  dashboardOnePartnerTypeInstance.data.datasets[0].data = chartData.map(\n    (item) => item.leads\n  );\n  dashboardOnePartnerTypeInstance.data.datasets[1].data = chartData.map(\n    (item) => item.dataPercentage\n  );\n  dashboardOnePartnerTypeInstance.update();\n};\n\nconst createMixedChart = () => {\n  const ctx = dashboardOnePartnerType.value.getContext(\"2d\");\n  dashboardOnePartnerTypeInstance = new Chart(ctx, {\n    type: \"bar\",\n    data: {\n      labels: [], // 初始化时标签为空\n      datasets: [\n        {\n          label: \"Leads\",\n          data: [], // 初始化时数据为空\n          backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n          yAxisID: \"y-axis-1\",\n        },\n        {\n          label: \"Data Percentage\",\n          data: [], // 初始化时数据为空\n          type: \"line\",\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          yAxisID: \"y-axis-2\",\n        },\n      ],\n    },\n    options: {\n      scales: {\n        \"y-axis-1\": {\n          type: \"linear\",\n          display: true,\n          position: \"left\",\n        },\n        \"y-axis-2\": {\n          type: \"linear\",\n          display: true,\n          position: \"right\",\n          grid: {\n            drawOnChartArea: false,\n          },\n          ticks: {\n            callback: function (value) {\n              return value + \"%\";\n            },\n          },\n        },\n      },\n      onClick: (event, activeElements) => {\n        if (activeElements.length > 0) {\n          const dataIndex = activeElements[0].index;\n          const type = dashboardOnePartnerTypeInstance.data.labels[dataIndex];\n          dashboardSelectType.value = type;\n          updateSecondChart(dashboardSelectType.value);\n        }\n      },\n    },\n  });\n};\n\nconst createDashboardTwoChart = (initialDateBoard) => {\n  const ctx = dashboardTwoPartnerData.value.getContext(\"2d\");\n  dashboardTwoPartnerDataInstance = new Chart(ctx, {\n    type: \"bar\", // 主类型设置为柱状图\n    data: {\n      labels: initialDateBoard.labels,\n      datasets: [\n        {\n          label: \"Leads\",\n          data: initialDateBoard.leads,\n          backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n          yAxisID: \"y-axis-1\", // 指定使用左侧的 y 轴\n        },\n        {\n          label: \"Data Percentage\",\n          data: initialDateBoard.percentages,\n          type: \"line\", // 设置此数据集为折线图类型\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          yAxisID: \"y-axis-2\", // 指定使用右侧的 y 轴\n        },\n      ],\n    },\n    options: {\n      scales: {\n        \"y-axis-1\": {\n          type: \"linear\",\n          display: true,\n          position: \"left\",\n        },\n        \"y-axis-2\": {\n          type: \"linear\",\n          display: true,\n          position: \"right\",\n          grid: {\n            drawOnChartArea: false,\n          },\n          ticks: {\n            callback: function (value) {\n              return value + \"%\";\n            },\n            beginAtZero: true, // 确保百分比轴从 0% 开始\n          },\n        },\n      },\n    },\n  });\n};\n\n//对图表二的初始化数据的处理\nconst getInitialDataForDashboardTwo = (dashboardCity) => {\n  const leadsField = `${dashboardCity.toLowerCase()}_marketing_data_leads`;\n\n  // 累加每个类型的 leads\n\n  const typeLeadsSum = partners.value.reduce((acc, partner) => {\n    const type = partner.third_partner_type;\n    const leads = Number(partner[leadsField]) || 0;\n    acc[type] = (acc[type] || 0) + leads;\n    return acc;\n  }, {});\n\n  // 找出 leads 最高的类型\n  const highestLeadsType = Object.entries(typeLeadsSum).sort(\n    (a, b) => b[1] - a[1]\n  )[0][0];\n  // 根据找到的类型，筛选并排序 partners\n  const filteredPartners = partners.value\n    .filter((partner) => partner.third_partner_type === highestLeadsType)\n    .sort((a, b) => b[leadsField] - a[leadsField]);\n\n  // 提取用于图表显示的数据\n  const labels = filteredPartners.map((partner) => partner.third_partner_name);\n  const leads = filteredPartners.map((partner) => partner[leadsField]);\n  const percentages = filteredPartners.map((partner) => {\n    const percentageValue =\n      partner[`${dashboardCity.toLowerCase()}_marketing_data`];\n    return percentageValue ? parseFloat(percentageValue.replace(\"%\", \"\")) : 0;\n  });\n\n  return { labels, leads, percentages, type: highestLeadsType };\n};\n\nconst updateSecondChart = (type) => {\n  // 根据label获取新的数据\n  const newData = getNewDataForSecondChart(dashboardCity.value, type);\n\n  // 更新第二个图表的数据\n  dashboardTwoPartnerDataInstance.data.labels = newData.labels;\n  dashboardTwoPartnerDataInstance.data.datasets[0].data = newData.leads;\n  dashboardTwoPartnerDataInstance.data.datasets[1].data = newData.percentages;\n  dashboardTwoPartnerDataInstance.update();\n};\n\nconst getNewDataForSecondChart = (dashboardCity, type) => {\n  const leadsField = `${dashboardCity.toLowerCase()}_marketing_data_leads`;\n  const dataField = `${dashboardCity.toLowerCase()}_marketing_data`;\n\n  // 过滤出匹配的 partners 并按照 leads 数量排序\n  const filteredPartners = partners.value\n    .filter((partner) => partner.third_partner_type === type)\n    .sort((a, b) => b[leadsField] - a[leadsField])\n    .slice(0, 10); // 取前十名\n\n  // 提取数据用于图表显示\n  const labels = filteredPartners.map((partner) => partner.third_partner_name);\n  const leads = filteredPartners.map((partner) => partner[leadsField]);\n  const percentages = filteredPartners.map((partner) => {\n    const percentageValue = partner[dataField];\n    return percentageValue ? parseFloat(percentageValue.replace(\"%\", \"\")) : 0;\n  });\n\n  return { labels, leads, percentages };\n};\n\nconst updateDashboardTwoForNewCity = (newCity) => {\n  const newDashboardTwoData = getInitialDataForDashboardTwo(newCity);\n\n  if (dashboardTwoPartnerDataInstance && dashboardTwoPartnerDataInstance.data) {\n    dashboardTwoPartnerDataInstance.data.labels = newDashboardTwoData.labels;\n    dashboardTwoPartnerDataInstance.data.datasets[0].data = newDashboardTwoData.leads;\n    dashboardTwoPartnerDataInstance.data.datasets[1].data = newDashboardTwoData.percentages;\n    dashboardTwoPartnerDataInstance.update();\n  } else {\n    // 如果图表实例不存在，则创建新的图表\n    createDashboardTwoChart(newDashboardTwoData);\n  }\n};\n\nonMounted(async () => {\n  const fetchDataAndInitChart = async () => {\n    await getData();\n    const initialDateBoard = getInitialDataForDashboardTwo(dashboardCity.value);\n    countNewPartners(selectedDays.value);\n    initChart();\n    createNewPartnersChart();\n    updateChart();\n    createMixedChart();\n    nextTick(() => {\n      updateDashboardChart(dashboardCity.value);\n      getInitialDataForDashboardTwo(dashboardCity.value);\n    });\n\n    createDashboardTwoChart(initialDateBoard);\n  };\n  fetchDataAndInitChart();\n});\n\nwatch(\n  dashboardCity,\n  (newValue) => {\n    if (\n      dashboardOnePartnerTypeInstance &&\n      dashboardOnePartnerTypeInstance.data\n    ) {\n      updateDashboardChart(newValue);\n    }\n    \n  },\n  { immediate: true }\n);\n\nwatch(selectedDays, () => {\n  updateChart();\n});\n\nwatch(currentData, (newData) => {\n  if (chartInstance.value) {\n    chartInstance.value.destroy(); // 销毁旧实例\n    // 重新实例化新图表\n    const ctx = chart.value.getContext(\"2d\");\n    chartInstance.value = new Chart(ctx, {\n      type: \"doughnut\",\n      data: {\n        labels: labels.value,\n        datasets: [{ data: newData, backgroundColor: backgroundColors.value }],\n      },\n      options: {\n        cutout: \"80%\",\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    });\n  }\n});\nwatch(\n  partners,\n  (newVal) => {\n    if (newVal && newVal.length > 0) {\n      createChart();\n    }\n  },\n  { deep: true }\n);\n\n//upload function\nconst uploadFile = async (event) => {\n  const file = event.target.files[0];\n  const formData = new FormData();\n  formData.append(\"csv\", file);\n  try {\n    await axios.post(\"api/partners/upload\", formData);\n    alert(\"上传成功！\");\n  } catch (err) {\n    alert(\"上传失败：\" + err.message);\n  }\n};\n\nconst exportToCSV = () => {\n  axios\n    .get(\"api/partners/export\")\n    .then((res) => {\n      exportsData.value = res.data;\n      const csv = [];\n      const headers = Object.keys(exportsData.value[0]);\n      csv.push(headers.join(\",\")); // 添加表头行\n\n      for (const partner of exportsData.value) {\n        const row = [];\n        for (const header of headers) {\n          let value = partner[header];\n          if (value !== null && value !== undefined) {\n            value = value.toString().replace(/\"/g, '\"\"'); // 转换为字符串并处理双引号\n            if (value.indexOf(\",\") >= 0 || value.indexOf(\"\\n\") >= 0) {\n              value = `\"${value}\"`; // 包含逗号或换行符的字段用双引号包围\n            }\n          } else {\n            value = \"\"; // 如果值为 null 或 undefined，使用空字符串\n          }\n          row.push(value);\n        }\n        csv.push(row.join(\",\")); // 添加每条数据的行\n      }\n\n      const csvContent = csv.join(\"\\n\");\n      const blob = new Blob([csvContent], {\n        type: \"text/csv;charset=utf-8;\",\n      });\n\n      const downloadLink = document.createElement(\"a\");\n      const url = URL.createObjectURL(blob);\n\n      downloadLink.href = url;\n      downloadLink.download = \"data.csv\";\n      downloadLink.click();\n\n      URL.revokeObjectURL(url);\n    })\n    .catch((err) => console.log(err));\n};\n</script>\n\n<style scoped>\n.page-wrapper {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n.page-body {\n  margin-top: 1.25rem;\n  margin-bottom: 1.25rem;\n}\n@media (min-width: 1200px) {\n  .container,\n  .container-lg,\n  .container-md,\n  .container-sm,\n  .container-xl {\n    max-width: 1199px;\n  }\n}\n.container,\n.container-fluid,\n.container-lg,\n.container-md,\n.container-sm,\n.container-xl,\n.container-xxl {\n  width: 100%;\n  padding-right: var(--tblr-gutter-x, 0.5rem);\n  padding-left: var(--tblr-gutter-x, 0.5rem);\n  margin-right: auto;\n  margin-left: auto;\n}\n.row-deck > .col,\n.row-deck > [class*=\"col-\"] {\n  display: flex;\n  align-items: stretch;\n}\n.row > * {\n  min-width: 0;\n}\n.row-deck > .col .card,\n.row-deck > [class*=\"col-\"] .card {\n  flex: 1 1 auto;\n}\n.card {\n  box-shadow: rgba(35, 46, 60, 0.04) 0 2px 4px 0;\n  border: 1px solid rgba(101, 109, 119, 0.16);\n}\n@media (min-width: 992px) {\n  .col-lg-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n}\n@media (min-width: 992px) {\n  .col-lg-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n}\n.row-cards .row-cards {\n  flex: 1;\n}\n.row-cards {\n  --tblr-gutter-x: 1rem;\n  --tblr-gutter-y: 1rem;\n}\n.row > * {\n  max-width: 100%;\n  padding-right: calc(var(--tblr-gutter-x) / 2);\n  padding-left: calc(var(--tblr-gutter-x) / 2);\n  margin-top: var(--tblr-gutter-y);\n}\n.card-header:first-child {\n  border-radius: 3px 3px 0 0;\n}\n.position-relative {\n  position: relative !important;\n}\n.page-pretitle {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #656d77;\n  display: flex;\n}\n.page-title {\n  margin: 0;\n  font-size: 1.25rem;\n  line-height: 1.4;\n  font-weight: 500;\n  color: inherit;\n  display: flex;\n  align-items: center;\n}\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  border-color: rgba(101, 109, 119, 0.24);\n  white-space: nowrap;\n}\n.btn-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -0.5rem !important;\n  margin-right: -0.5rem;\n}\n.btn-list > * {\n  margin: 0 0.5rem 0.5rem 0 !important;\n}\n.logout {\n  background-color: #fff;\n  color: #216bc4;\n}\n.add-new-partner {\n  background-color: #216bc4;\n  color: #f4f6fa;\n}\n.btn .icon {\n  width: 1.25rem;\n  height: 1.25rem;\n  min-width: 1.25rem;\n  margin: 0 0.5rem 0 -0.25rem;\n  vertical-align: middle;\n}\n@media (min-width: 576px) {\n  .d-sm-inline {\n    display: inline !important;\n  }\n}\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=7f79c50c&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jiandongz/Desktop/vue-partner-system/vue3-deploy/client/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7f79c50c\"]])\n\nexport default __exports__"],"names":["visible","ref","show","value","confirm","emit","cancel","expose","__exports__","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","animations","hide","applyLayoutsDefaults","autoPadding","padding","top","right","bottom","left","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","plugin_tooltip","_element","afterInit","_args","afterDraw","afterEvent","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","LogarithmicScale","_zero","changeExponent","generateTicks","RadialLinearScale","animate","angleLines","pointLabels","centerPointLabels","xCenter","yCenter","drawingArea","_pointLabels","_pointLabelItems","_padding","getTickBackdropHeight","fitWithPointLabels","setCenterPoint","leftMovement","rightMovement","topMovement","bottomMovement","getIndexAngle","angleMultiplier","getDistanceFromCenterForValue","scalingFactor","getValueForDistanceFromCenter","scaledDistance","getPointLabelContext","pointLabel","createPointLabelContext","getPointPosition","distanceFromCenter","additionalAngle","getPointPositionForValue","getBasePosition","getPointLabelPosition","pathRadiusLine","drawPointLabels","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","ConfirmDeleteDialogRef","deleteDialogId","router","useRouter","store","useStore","partners","filterInput","user","computed","getters","exportsData","currentPage","pageWindowStart","windowSize","itemsPerPage","verticalChart","backgroundColors","selectedCity","chartInstance","verticalChartInstance","selectedDays","newPartnersChart","newPartnersChartInstance","dashboardOnePartnerType","dashboardOnePartnerTypeInstance","dashboardCity","dashboardTwoPartnerData","dashboardTwoPartnerDataInstance","dashboardSelectType","getData","async","response","axios","err","goto_add","logOut","localStorage","removeItem","dispatch","showDeleteDialog","deleteData","deleteID","visiblePages","totalPages","_","paginatedData","filtered","filteredData","setCurrentPage","page","moveWindow","newStart","regex","RegExp","partner","test","contactPercentage","partnersWithContact","hasSHContact","sh_contact","hasHZContact","hz_contact","hasBJContact","bj_contact","percentage","toFixed","selectCity","city","currentData","statusMapping","counts","合作中","待合作","暂停合作","trackingProcess","SH_tracking_process","HZ_tracking_process","BJ_tracking_process","initChart","createChart","frequencyMap","verticalLabels","verticalData","ctx2","updateChart","newData","countNewPartners","days","cutoffDate","UTC","getUTCFullYear","getUTCMonth","getUTCDate","filteredPartners","createNewPartnersChart","prepareChartData","leadsField","dataField","groupedData","third_partner_type","totalLeads","weightedDataSum","leads","dataFieldValue","dataPercentage","chartData","updateDashboardChart","createMixedChart","updateSecondChart","createDashboardTwoChart","initialDateBoard","percentages","getInitialDataForDashboardTwo","typeLeadsSum","highestLeadsType","third_partner_name","percentageValue","getNewDataForSecondChart","onMounted","fetchDataAndInitChart","nextTick","watch","newValue","immediate","newVal","deep","exportToCSV","csv","headers","row","header","csvContent","blob","Blob","downloadLink","createElement","url","URL","createObjectURL","href","download","click","revokeObjectURL","catch","log"],"sourceRoot":""}