{"version":3,"file":"assets/js/893.d2e75d96.js","mappings":"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","sources":["webpack://client/./node_modules/core-js/internals/classof.js","webpack://client/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://client/./node_modules/core-js/internals/to-string-tag-support.js","webpack://client/./node_modules/core-js/internals/to-string.js","webpack://client/./node_modules/core-js/internals/validate-arguments-length.js","webpack://client/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://client/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://client/./node_modules/core-js/modules/web.url-search-params.size.js","webpack://client/./node_modules/@kurkle/color/dist/color.esm.js","webpack://client/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://client/./node_modules/chart.js/dist/chart.js","webpack://client/./src/views/index.vue","webpack://client/./src/views/index.vue?fb31"],"sourcesContent":["'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<template>\n  <div class=\"home\">\n    <div class=\"page-wrapper\">\n      <div class=\"page-header d-print-none\">\n        <div class=\"container-xl\">\n          <div class=\"row g-2 align-items-center\">\n            <div class=\"col\">\n              <!-- Page pre-title -->\n              <div class=\"page-pretitle\">Overview</div>\n              <h2 class=\"page-title\">Dashboard{{ currentData }}</h2>\n            </div>\n            <!-- Page title actions -->\n            <div class=\"col-auto ms-auto d-print-none\">\n              <div class=\"btn-list\">\n                <a\n                  @click=\"goto_add()\"\n                  class=\"btn btn-primary d-none d-sm-inline-block add-new-partner\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#modal-report\"\n                >\n                  <!-- Download SVG icon from http://tabler-icons.io/i/plus -->\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    class=\"icon\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    stroke-width=\"2\"\n                    stroke=\"currentColor\"\n                    fill=\"none\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <path d=\"M12 5l0 14\" />\n                    <path d=\"M5 12l14 0\" />\n                  </svg>\n                  Add new partner\n                </a>\n                <span class=\"d-none d-sm-inline\">\n                  <a href=\"#\" class=\"btn logout\" @click=\"logOut()\"> Logout </a>\n                </span>\n                <!-- <div>\n                  <input type=\"file\" @change=\"uploadFile\">\n                </div> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"page-body\">\n        <div class=\"container-xl\">\n          <div class=\"row row-deck row-cards\">\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Total Partners</div>\n                  </div>\n                  <div class=\"h1 mb-3\">{{ partners.length }}</div>\n                  <div class=\"d-flex mb-2\">\n                    <div>contact rate</div>\n                    <div class=\"ms-auto\">\n                      <span\n                        class=\"text-green d-inline-flex align-items-center lh-1\"\n                      >\n                        {{ contactPercentage }}%\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"progress progress-sm\">\n                    <div\n                      class=\"progress-bar bg-primary\"\n                      :style=\"{ width: contactPercentage + '%' }\"\n                      role=\"progressbar\"\n                      aria-valuenow=\"75\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-label=\"75% Complete\"\n                    >\n                      <span class=\"visually-hidden\">75% Complete</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">In collaboration</div>\n                    <div class=\"ms-auto lh-1\">\n                      <a\n                        class=\"dropdown-toggle text-secondary\"\n                        href=\"#\"\n                        data-bs-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        >{{ selectedCity }}</a\n                      >\n                      <div class=\"dropdown-menu dropdown-menu-end\">\n                        <a\n                          class=\"dropdown-item active\"\n                          @click=\"selectCity('SH')\"\n                          >SH</a\n                        >\n                        <a class=\"dropdown-item\" @click=\"selectCity('HZ')\"\n                          >HZ</a\n                        >\n                        <a class=\"dropdown-item\" @click=\"selectCity('BJ')\"\n                          >BJ</a\n                        >\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex\" style=\"align-items: center\">\n                    <div\n                      class=\"h1 mb-0 me-2\"\n                      style=\"width: 100px; height: 100px\"\n                    >\n                      <canvas ref=\"chart\"></canvas>\n                    </div>\n                    <div class=\"me-auto lh-1\">\n                      <span class=\"text-green\">\n                        <ul style=\"list-style-type: none; padding-left: 0\">\n                          <li\n                            v-for=\"(label, index) in labels\"\n                            :key=\"label\"\n                            style=\"\n                              display: flex;\n                              align-items: center;\n                              margin-bottom: 8px;\n                              font-size: 12px;\n                            \"\n                          >\n                            <div\n                              :style=\"{\n                                background: backgroundColors[index],\n                                width: '10px',\n                                height: '10px',\n                                marginRight: '10px',\n                              }\"\n                            ></div>\n                            {{ label }}\n                          </li>\n                        </ul>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Missing Contact</div>\n                    <div class=\"ms-auto lh-1\">\n                      <div class=\"dropdown\">\n                        <a\n                          class=\"dropdown-toggle text-secondary\"\n                          href=\"#\"\n                          data-bs-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          >Last 7 days</a\n                        >\n                        <div class=\"dropdown-menu dropdown-menu-end\">\n                          <a class=\"dropdown-item active\" href=\"#\"\n                            >Last 7 days</a\n                          >\n                          <a class=\"dropdown-item\" href=\"#\">Last 30 days</a>\n                          <a class=\"dropdown-item\" href=\"#\">Last 3 months</a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex align-items-baseline\">\n                    <div class=\"h1 mb-3 me-2\">Demo</div>\n                    <div class=\"me-auto\">\n                      <span\n                        class=\"text-yellow d-inline-flex align-items-center lh-1\"\n                      >\n                        0%\n                        <!-- Download SVG icon from http://tabler-icons.io/i/minus -->\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          class=\"icon ms-1\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          stroke-width=\"2\"\n                          stroke=\"currentColor\"\n                          fill=\"none\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M5 12l14 0\" />\n                        </svg>\n                      </span>\n                    </div>\n                  </div>\n                  <div id=\"chart-new-clients\" class=\"chart-sm\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Active Partners</div>\n                    <div class=\"ms-auto lh-1\">\n                      <div class=\"dropdown\">\n                        <a\n                          class=\"dropdown-toggle text-secondary\"\n                          href=\"#\"\n                          data-bs-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          >Last 7 days</a\n                        >\n                        <div class=\"dropdown-menu dropdown-menu-end\">\n                          <a class=\"dropdown-item active\" href=\"#\"\n                            >Last 7 days</a\n                          >\n                          <a class=\"dropdown-item\" href=\"#\">Last 30 days</a>\n                          <a class=\"dropdown-item\" href=\"#\">Last 3 months</a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex align-items-baseline\">\n                    <div class=\"h1 mb-3 me-2\">Demo</div>\n                    <div class=\"me-auto\">\n                      <span\n                        class=\"text-green d-inline-flex align-items-center lh-1\"\n                      >\n                        4%\n                        <!-- Download SVG icon from http://tabler-icons.io/i/trending-up -->\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          class=\"icon ms-1\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          stroke-width=\"2\"\n                          stroke=\"currentColor\"\n                          fill=\"none\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M3 17l6 -6l4 4l8 -8\" />\n                          <path d=\"M14 7l7 0l0 7\" />\n                        </svg>\n                      </span>\n                    </div>\n                  </div>\n                  <div id=\"chart-active-users\" class=\"chart-sm\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-lg-6\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <h3 class=\"card-title\">Data Dashboard 1</h3>\n                  <div id=\"chart-mentions\" class=\"chart-lg\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-6\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <h3 class=\"card-title\">Data Dashboard 2</h3>\n                  <div class=\"ratio ratio-21x9\">\n                    <div>\n                      <div id=\"map-world\" class=\"w-100 h-100\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h3 class=\"card-title\">Partner list</h3>\n                </div>\n                <div class=\"card-body border-bottom py-3\">\n                  <div class=\"d-flex\">\n                    <div class=\"text-secondary\">\n                      Show\n                      <div class=\"mx-2 d-inline-block\">\n                        <input\n                          type=\"text\"\n                          class=\"form-control form-control-sm\"\n                          value=\"8\"\n                          size=\"3\"\n                          aria-label=\"Invoices count\"\n                        />\n                      </div>\n                      entries\n                    </div>\n\n                    <div class=\"ms-auto text-secondary\">\n                      Search:\n                      <div class=\"ms-2 d-inline-block\">\n                        <input\n                          v-model=\"filterInput\"\n                          type=\"text\"\n                          class=\"form-control form-control-sm\"\n                          aria-label=\"Search invoice\"\n                        />\n                      </div>\n                    </div>\n                    <!-- <button\n                      class=\"btn btn-outline-success\"\n                      @click=\"exportToCSV()\"\n                    >\n                      export\n                    </button> -->\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <table\n                    class=\"table card-table table-vcenter text-nowrap datatable\"\n                  >\n                    <thead>\n                      <tr>\n                        <th class=\"w-1\">\n                          <input\n                            class=\"form-check-input m-0 align-middle\"\n                            type=\"checkbox\"\n                            aria-label=\"Select all invoices\"\n                          />\n                        </th>\n                        <th>Partner Type</th>\n                        <th>Partner Name</th>\n                        <th>2B/2C</th>\n                        <th>Vertical</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody v-if=\"user\">\n                      <tr v-for=\"partner in paginatedData\" :key=\"partner._id\">\n                        <td>\n                          <input\n                            class=\"form-check-input m-0 align-middle\"\n                            type=\"checkbox\"\n                            aria-label=\"Select invoice\"\n                          />\n                        </td>\n                        <td>\n                          {{ partner.third_partner_type }}\n                        </td>\n                        <td>\n                          <span class=\"flag flag-country-us\"></span>\n                          {{ partner.third_partner_name }}\n                        </td>\n                        <td>{{ partner.b2b_or_b2c }}</td>\n                        <td>{{ partner.vertical }}</td>\n                        <td class=\"text-end\">\n                          <router-link\n                            class=\"single-partner\"\n                            :to=\"'/single-partner/' + partner._id\"\n                          >\n                            <button\n                              class=\"btn btn-primary\"\n                              style=\"\n                                --bs-btn-padding-y: 0.25rem;\n                                --bs-btn-padding-x: 0.5rem;\n                                --bs-btn-font-size: 0.75rem;\n                              \"\n                            >\n                              detials\n                            </button>\n                          </router-link>\n                          <button\n                            class=\"btn btn-dark\"\n                            style=\"\n                              --bs-btn-padding-y: 0.25rem;\n                              --bs-btn-padding-x: 0.5rem;\n                              --bs-btn-font-size: 0.75rem;\n                            \"\n                            data-bs-toggle=\"dropdown\"\n                            @click.stop=\"deleteData(partner._id)\"\n                            v-if=\"user.identity == 'Super-Admin'\"\n                          >\n                            delete\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"card-footer d-flex align-items-center\">\n                  <p class=\"m-0 text-secondary\">\n                    Showing <span>1</span> to <span>8</span> of\n                    <span>16</span> entries\n                  </p>\n\n                  <ul class=\"pagination m-0 ms-auto\">\n                    <li\n                      class=\"page-item\"\n                      :class=\"{ disabled: currentPage === 1 }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\" \"\n                        @click.prevent=\"moveWindow(-1)\"\n                      >\n                        <!-- SVG for 'prev' ... -->\n                        prev\n                      </a>\n                    </li>\n\n                    <li\n                      class=\"page-item\"\n                      v-for=\"page in visiblePages\"\n                      :key=\"page\"\n                      :class=\"{ active: page === currentPage }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\"#\"\n                        @click.prevent=\"setCurrentPage(page)\"\n                        >{{ page }}</a\n                      >\n                    </li>\n\n                    <li\n                      class=\"page-item\"\n                      :class=\"{ disabled: currentPage === totalPages }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\" \"\n                        @click.prevent=\"moveWindow(1)\"\n                      >\n                        next\n                        <!-- SVG for 'next' ... -->\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport {useRouter} from 'vue-router';\nimport axios from \"../http\";\nimport { ref, computed, onMounted, watch, nextTick } from \"vue\";\nimport {\n  Chart,\n  DoughnutController,\n  ArcElement,\n  CategoryScale,\n  Tooltip,\n} from \"chart.js\";\nimport { useStore } from \"vuex\";\n\nChart.register(DoughnutController, ArcElement, CategoryScale, Tooltip);\n\nconst router = useRouter()\nconst store = useStore();\nconst partners = ref([]);\nconst filterInput = ref([]);\nconst exportsData = ref([]);\nconst currentPage = ref(1);\nconst itemsPerPage = ref(10);\nconst chart = ref(null);\nconst labels = ref([\n  \"collaborating\",\n  \"pending collaboration\",\n  \"collaboration paused\",\n]);\nconst backgroundColors = ref([\"#0d6efd\", \"#3d8bfd\", \"#9ec5fe\"]);\nconst selectedCity = ref(\"SH\");\nconst chartInstance = ref(null); // 存储图表实例\n\nconst user = computed(() => store.getters.user);\n\nconst pageWindowStart = ref(1); // Start page for sliding window\nconst windowSize = ref(3);     // Number of pages to display in the sliding window\n\nconst visiblePages = computed(() => {\n    let end = pageWindowStart.value + windowSize.value;\n    if (end > totalPages.value) end = totalPages.value;\n    return Array.from({ length: end - pageWindowStart.value }, (_, i) => i + pageWindowStart.value);\n});\n\n\nconst getData = () => {\n  axios\n    .get(\"api/partners\")\n    .then((res) => {\n      partners.value = res.data;\n    })\n    .catch((err) => console.log(err));\n};\n\nconst goto_add = () => {\n  router.push({ path: \"/add\" });\n};\n\nconst logOut = () =>{\n  localStorage.removeItem(\"userToken\");\n      //config vuex store\n      store.dispatch(\"clearCurrentState\");\n      router.push({ path: \"/login\" });\n}\n\nconst deleteData = (id) => {\n  axios.delete(\"api/partners/delete/\" + id);\n  getData();\n};\n\n\nconst paginatedData = computed(() => {\n    const filtered = filteredData(partners.value, filterInput.value);\n    const start = (currentPage.value - 1) * itemsPerPage.value;\n    const end = currentPage.value * itemsPerPage.value;\n    return filtered.slice(start, end);\n});\n\n\nfunction setCurrentPage(page) {\n    currentPage.value = page;\n}\n\nfunction moveWindow(direction) {\n    const newStart = pageWindowStart.value + direction * windowSize.value;\n    if (newStart >= 1 && newStart + windowSize.value <= totalPages.value + 1) {\n        pageWindowStart.value = newStart;\n    }\n}\n\n\nconst totalPages = computed(() => {\n    return Math.ceil(\n        filteredData(partners.value, filterInput.value).length / itemsPerPage.value\n    );\n});\n\n\n\nconst filteredData = (partners, value) => {\n  const regex = new RegExp(value, \"i\");\n  return partners.filter((partner) =>\n    Object.values(partner).some(\n      (field) => typeof field === \"string\" && regex.test(field)\n    )\n  );\n};\n\nconst contactPercentage = computed(() => {\n  const partnersWithContact = partners.value.filter((partner) => {\n    const hasSHContact =\n      partner.sh_contact && Object.keys(partner.sh_contact).length > 0;\n    const hasHZContact =\n      partner.hz_contact && Object.keys(partner.hz_contact).length > 0;\n    const hasBJContact =\n      partner.bj_contact && Object.keys(partner.bj_contact).length > 0;\n    return hasSHContact || hasHZContact || hasBJContact;\n  }).length;\n\n  if (partners.value.length === 0) return 0;\n  const percentage = (partnersWithContact / partners.value.length) * 100;\n  return parseFloat(percentage.toFixed(2));\n});\n\nconst selectCity = (city) => {\n  selectedCity.value = city;\n};\n\nconst currentData = computed(() => {\n  if (!partners.value || partners.value.length === 0) return [0, 0, 0];\n\n  const statusMapping = {\n    \"A. 待合作\": \"待合作\",\n    \"C. 合作中\": \"合作中\",\n    \"B. 合作暂停\": \"暂停合作\",\n  };\n  const counts = {\n    合作中: 0,\n    待合作: 0,\n    暂停合作: 0,\n  };\n\n  partners.value.forEach((partner) => {\n    let trackingProcess;\n\n    switch (selectedCity.value) {\n      case \"SH\":\n        trackingProcess = partner.SH_tracking_process || null;\n        break;\n      case \"HZ\":\n        trackingProcess = partner.HZ_tracking_process || null;\n        break;\n      case \"BJ\":\n        trackingProcess = partner.BJ_tracking_process || null;\n        break;\n      default:\n        trackingProcess = null;\n    }\n\n    if (trackingProcess && statusMapping[trackingProcess]) {\n      const key = statusMapping[trackingProcess];\n      if (counts[key] !== undefined) {\n        counts[key]++;\n      }\n    }\n  });\n  return [counts[\"合作中\"], counts[\"待合作\"], counts[\"暂停合作\"]];\n});\n\nconst initChart = () => {\n  const ctx = chart.value.getContext(\"2d\");\n  chartInstance.value = new Chart(ctx, {\n    type: \"doughnut\",\n    data: {\n      labels: labels.value,\n      datasets: [\n        {\n          data: currentData.value, // 注意这里使用 `.value` 获取计算属性的值\n          backgroundColor: backgroundColors.value,\n        },\n      ],\n    },\n    options: {\n      cutout: \"80%\",\n      responsive: true,\n      maintainAspectRatio: false,\n    },\n  });\n};\n\nonMounted(() => {\n  const fetchDataAndInitChart = async () => {\n    await getData();\n    initChart();\n  };\n  fetchDataAndInitChart();\n});\n\nwatch(currentData, (newData) => {\n  if (chartInstance.value) {\n    chartInstance.value.destroy(); // 销毁旧实例\n    // 重新实例化新图表\n    const ctx = chart.value.getContext(\"2d\");\n    chartInstance.value = new Chart(ctx, {\n      type: \"doughnut\",\n      data: {\n        labels: labels.value,\n        datasets: [{ data: newData, backgroundColor: backgroundColors.value }],\n      },\n      options: {\n        cutout: \"80%\",\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    });\n  }\n});\n\nconst uploadFile = async (event) => {\n  const file = event.target.files[0];\n  const formData = new FormData();\n  formData.append(\"csv\", file);\n  try {\n    await axios.post(\"api/partners/upload\", formData);\n    alert(\"上传成功！\");\n  } catch (err) {\n    alert(\"上传失败：\" + err.message);\n  }\n};\n\nconst exportToCSV = ()=> {\n      axios\n        .get(\"api/partners/export\")\n        .then((res) => {\n          this.exportsData = res.data;\n          const csv = [];\n          const headers = Object.keys(this.exportsData[0]);\n          csv.push(headers.join(\",\")); // 添加表头行\n\n          for (const partner of this.exportsData) {\n            const row = [];\n            for (const header of headers) {\n              const value =\n                partner[header] !== undefined ? partner[header] : \"\"; // 如果值为 undefined，则使用空字符串\n              row.push(value);\n            }\n            csv.push(row.join(\",\")); // 添加每条数据的行\n          }\n\n          const csvContent = csv.join(\"\\n\");\n          const blob = new Blob([csvContent], {\n            type: \"text/csv;charset=utf-8;\",\n          });\n\n          const downloadLink = document.createElement(\"a\");\n          const url = URL.createObjectURL(blob);\n\n          downloadLink.href = url;\n          downloadLink.download = \"data.csv\";\n          downloadLink.click();\n\n          URL.revokeObjectURL(url);\n        })\n        .catch((err) => console.log(err));\n    }\n</script>\n\n<style scoped>\n.page-wrapper {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n.page-body {\n  margin-top: 1.25rem;\n  margin-bottom: 1.25rem;\n}\n@media (min-width: 1200px) {\n  .container,\n  .container-lg,\n  .container-md,\n  .container-sm,\n  .container-xl {\n    max-width: 1199px;\n  }\n}\n.container,\n.container-fluid,\n.container-lg,\n.container-md,\n.container-sm,\n.container-xl,\n.container-xxl {\n  width: 100%;\n  padding-right: var(--tblr-gutter-x, 0.5rem);\n  padding-left: var(--tblr-gutter-x, 0.5rem);\n  margin-right: auto;\n  margin-left: auto;\n}\n.row-deck > .col,\n.row-deck > [class*=\"col-\"] {\n  display: flex;\n  align-items: stretch;\n}\n.row > * {\n  min-width: 0;\n}\n.row-deck > .col .card,\n.row-deck > [class*=\"col-\"] .card {\n  flex: 1 1 auto;\n}\n.card {\n  box-shadow: rgba(35, 46, 60, 0.04) 0 2px 4px 0;\n  border: 1px solid rgba(101, 109, 119, 0.16);\n}\n@media (min-width: 992px) {\n  .col-lg-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n}\n@media (min-width: 992px) {\n  .col-lg-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n}\n.row-cards .row-cards {\n  flex: 1;\n}\n.row-cards {\n  --tblr-gutter-x: 1rem;\n  --tblr-gutter-y: 1rem;\n}\n.row > * {\n  max-width: 100%;\n  padding-right: calc(var(--tblr-gutter-x) / 2);\n  padding-left: calc(var(--tblr-gutter-x) / 2);\n  margin-top: var(--tblr-gutter-y);\n}\n.card-header:first-child {\n  border-radius: 3px 3px 0 0;\n}\n.position-relative {\n  position: relative !important;\n}\n.page-pretitle {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #656d77;\n  display: flex;\n}\n.page-title {\n  margin: 0;\n  font-size: 1.25rem;\n  line-height: 1.4;\n  font-weight: 500;\n  color: inherit;\n  display: flex;\n  align-items: center;\n}\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  border-color: rgba(101, 109, 119, 0.24);\n  white-space: nowrap;\n}\n.btn-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -0.5rem !important;\n  margin-right: -0.5rem;\n}\n.btn-list > * {\n  margin: 0 0.5rem 0.5rem 0 !important;\n}\n.logout {\n  background-color: #fff;\n  color: #216bc4;\n}\n.add-new-partner {\n  background-color: #216bc4;\n  color: #f4f6fa;\n}\n.btn .icon {\n  width: 1.25rem;\n  height: 1.25rem;\n  min-width: 1.25rem;\n  margin: 0 0.5rem 0 -0.25rem;\n  vertical-align: middle;\n}\n@media (min-width: 576px) {\n  .d-sm-inline {\n    display: inline !important;\n  }\n}\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=38d2ed54&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-38d2ed54\"]])\n\nexport default __exports__"],"names":["TO_STRING_TAG_SUPPORT","isCallable","classofRaw","wellKnownSymbol","TO_STRING_TAG","$Object","Object","CORRECT_ARGUMENTS","arguments","tryGet","it","key","error","module","exports","O","tag","result","undefined","callee","makeBuiltIn","defineProperty","target","name","descriptor","get","getter","set","setter","f","test","String","classof","$String","argument","TypeError","$TypeError","passed","required","defineBuiltIn","uncurryThis","toString","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","prototype","append","$delete","forEach","push","params","length","$value","this","entries","v","k","value","entry","index","dindex","found","entriesLength","enumerable","unsafe","getAll","$has","has","values","DESCRIPTORS","defineBuiltInAccessor","count","configurable","round","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","HUE_RE","hsl2rgbn","s","n","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","right","bottom","left","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","center","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","horizontal","isHorizontal","buildStacks","layouts","wrap","placed","setLayoutDims","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","next","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","getPixelForValue","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","plugin_tooltip","_element","afterInit","_args","afterDraw","afterEvent","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","router","useRouter","store","useStore","partners","ref","filterInput","currentPage","itemsPerPage","backgroundColors","selectedCity","chartInstance","user","computed","getters","pageWindowStart","windowSize","visiblePages","totalPages","_","getData","axios","catch","err","log","goto_add","path","logOut","localStorage","removeItem","dispatch","deleteData","paginatedData","filtered","filteredData","setCurrentPage","page","moveWindow","newStart","regex","RegExp","partner","contactPercentage","partnersWithContact","hasSHContact","sh_contact","hasHZContact","hz_contact","hasBJContact","bj_contact","percentage","toFixed","selectCity","city","currentData","statusMapping","counts","合作中","待合作","暂停合作","trackingProcess","SH_tracking_process","HZ_tracking_process","BJ_tracking_process","initChart","onMounted","fetchDataAndInitChart","async","watch","newData","__exports__"],"sourceRoot":""}