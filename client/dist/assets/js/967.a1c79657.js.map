{"version":3,"file":"assets/js/967.a1c79657.js","mappings":"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","sources":["webpack://client/./src/views/ToastComponent.vue","webpack://client/./src/views/ToastComponent.vue?3354","webpack://client/./src/composables/useToast.js","webpack://client/./src/http.js","webpack://client/./node_modules/vue-loader/dist/exportHelper.js","webpack://client/./src/views/DeleteDialog.vue","webpack://client/./src/views/DeleteDialog.vue?292c","webpack://client/./node_modules/@kurkle/color/dist/color.esm.js","webpack://client/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://client/./node_modules/chart.js/dist/chart.js","webpack://client/./src/views/index.vue","webpack://client/./src/views/index.vue?fb31"],"sourcesContent":["<!-- MyToast.vue -->\n<template>\n  <div\n    aria-live=\"polite\"\n    aria-atomic=\"true\"\n    style=\"position: relative; min-height: 200px\"\n  >\n    <!-- Position it -->\n    <div style=\"position: absolute; top: 0; right: 0\">\n      <!-- Then put toasts within -->\n      <div\n        class=\"toast alert\"\n        :class=\"alertClass\"\n        role=\"alert\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n      >\n        <div class=\"toast-header\">\n          <strong class=\"mr-auto\">{{ message }}</strong>\n          <small class=\"text-muted\">just now</small>\n          <button\n            type=\"button\"\n            class=\"ml-2 mb-1 close\"\n            data-dismiss=\"toast\"\n            @click=\"closeToast\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <!-- <div class=\"toast-body\">\n        See? Just like this.\n      </div> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, computed, nextTick } from \"vue\";\n\nconst isToastShowing = ref(false);\n\nconst props = defineProps({\n  message: {\n    type: String,\n    default: \"\",\n  },\n  statusCode: {\n    type: Number,\n    default: 200,\n  },\n});\n\nconst alertClass = computed(() => {\n  switch (props.statusCode) {\n    case 200:\n      return \"alert-success\";\n    case 400:\n      return \"alert-warning\"; // 或者你可以定义自己的灰色 alert 样式\n    case 403:\n      return \"alert-secondary\";\n    case 404:\n      return \"alert-danger\";\n    case 500:\n      return \"alert-danger\";\n    default:\n      return \"alert-primary\"; // 默认颜色\n  }\n});\nconst show = () => {\n  nextTick(() => {\n    let toastElement = document.querySelector(\".toast\");\n    let toastInstance = new bootstrap.Toast(toastElement);\n    toastInstance.show();\n    isToastShowing.value = true;\n  });\n};\nconst closeToast = () => {\n  let toastElement = document.querySelector(\".toast\");\n  let toastInstance = new bootstrap.Toast(toastElement);\n  toastInstance.hide();\n  isToastShowing.value = false;\n};\n\ndefineExpose({ show, closeToast });\n</script>\n\n<style scoped>\n.toast {\n  position: fixed;\n  top: 5%;\n  right: 5%;\n  z-index: 99999;\n  padding: 1rem;\n}\ndiv.toast.alert-success {\n  color: var(--bs-success-text);\n  background-color: var(--bs-success-bg-subtle);\n  border-color: var(--bs-success-border-subtle);\n}\ndiv.toast.alert-warning {\n  color: var(--bs-warning-text);\n  background-color: var(--bs-warning-bg-subtle);\n  border-color: var(--bs-warning-border-subtle);\n}\ndiv.toast.alert-secondary {\n  color: var(--bs-dark-text);\n  background-color: var(--bs-dark-bg-subtle);\n  border-color: var(--bs-dark-border-subtle);\n}\ndiv.toast.alert-danger {\n  color: var(--bs-danger-text);\n  background-color: var(--bs-danger-bg-subtle);\n  border-color: var(--bs-danger-border-subtle);\n}\n</style>","import script from \"./ToastComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToastComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ToastComponent.vue?vue&type=style&index=0&id=9522ce64&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jiandongz/Desktop/vue-partner-system/vue3-deploy/client/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9522ce64\"]])\n\nexport default __exports__","import { createApp } from 'vue';\nimport Toast from '../views/ToastComponent.vue';\n\nfunction useToast() {\n    const showToast = (message, statusCode) => {\n        console.log(\"Inside showToast function\");\n\n        // 创建一个新的 div 元素作为挂载点\n        const mountPoint = document.createElement('div');\n        document.body.appendChild(mountPoint);\n\n        // 使用 createApp 创建一个新的 Vue app 实例，并将 Toast 组件挂载到 mountPoint 上\n        const toastApp = createApp(Toast, { message, statusCode }); // 注意这里增加了statusCode\n        const toastInstance = toastApp.mount(mountPoint);\n\n        console.log(\"Toast added to body\");\n\n        // 如果 Toast 组件有 show 方法，则调用它\n        if (toastInstance && typeof toastInstance.show === 'function') {\n            toastInstance.show();\n        }\n\n        setTimeout(() => {\n            toastApp.unmount(); // 使用 toastApp 卸载组件\n            document.body.removeChild(mountPoint);\n            console.log(\"Toast removed from body\");\n        }, 30000);  \n    };\n\n    return {\n        showToast\n    };\n}\n\nexport default useToast;","import axios from 'axios';\nimport router from './router'\nimport useToast from './composables/useToast'\n\n\naxios.interceptors.request.use(\n    config => {\n        if (localStorage.userToken) {\n            config.headers.Authorization = localStorage.userToken;\n        }\n        return config;\n    }, error => {\n        return Promise.reject(error)\n    }\n)\n\n\naxios.interceptors.response.use(\n    response => {\n        \n        const { showToast } = useToast();\n\n        // 判断是否存在 message 并显示 toast\n        if (response.data && response.data.message) {\n            showToast(response.data.message, response.status);\n        }\n        return response\n    },\n    async error => {\n        const { showToast } = useToast()\n        console.log(\"error response:\", error.response)\n        if (error.response) {\n            const { status, data } = error.response;\n\n            // 使用后端返回的 message 或默认信息\n            const errorMessage = data.message || data.error || 'An error occurred.';\n\n            // 为特定的状态码设置特殊处理\n            if (status === 401) {\n                showToast('Token invalid. Please login again.', status,'error');\n                localStorage.removeItem('userToken');\n                router.push('/login');\n            } else {\n                // 对于其他状态码，直接显示后端返回的错误信息\n                showToast(errorMessage, status);\n            }\n        } else {\n            // 如果没有 error.response，可能是网络问题或其他问题\n            showToast('Network error. Please try again.', 'error');\n        }\n\n        return Promise.reject(error);\n    }\n);\n\n\nexport default axios","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\n  <div v-if=\"visible\" class=\"confirm-dialog-overlay\">\n    <div class=\"confrim-dialog\">\n      <h3 class=\"context\">请问是否确认删除此Partner</h3>\n      <button @click=\"confirm\" class=\"btn btn-primary btn-sm\">确定</button>\n      <button class=\"btn btn-secondary\" @click=\"cancel\">取消</button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { watch, ref, defineProps, defineEmits } from \"vue\";\n\n\nconst emit = defineEmits([\"confirm\"]);\n\nconst visible = ref(false);\n\nconst show = () => {\n  visible.value = true;\n};\n\nconst confirm = () => {\n  emit(\"confirm\");\n  visible.value = false;\n};\n\nconst cancel = () => {\n  visible.value = false;\n};\n\ndefineExpose({ show });\n</script>\n<style scoped>\n.confirm-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* 半透明黑色背景 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.context{\n    color: black;\n\n}\n.confrim-dialog {\n  background-color: white; /* 添加背景色 */\n  padding: 20px; /* 添加内边距 */\n  border-radius: 10px; /* 圆角 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\n}\n\nbutton {\n  margin: 10px; /* 增加边距 */\n  border: none; /* 移除边框 */\n  padding: 10px 20px; /* 增加填充 */\n  border-radius: 5px; /* 圆角按钮 */\n  cursor: pointer; /* 手型光标 */\n}\n\n.btn-primary {\n  background-color: #007bff; /* 主题蓝色 */\n  color: white; /* 文字颜色 */\n}\n\n.btn-primary:hover {\n  background-color: #0056b3; /* 悬停时颜色加深 */\n}\n\nbutton:hover {\n  opacity: 0.8; /* 所有按钮悬停时透明度降低 */\n}\n</style>","import script from \"./DeleteDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeleteDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DeleteDialog.vue?vue&type=style&index=0&id=4dcdf0fc&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jiandongz/Desktop/vue-partner-system/vue3-deploy/client/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4dcdf0fc\"]])\n\nexport default __exports__","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<template>\n  <div class=\"home\">\n    <div class=\"page-wrapper\">\n      <div class=\"page-header d-print-none\">\n        <div class=\"container-xl\">\n          <div class=\"row g-2 align-items-center\">\n            <div class=\"col\">\n              <!-- Page pre-title -->\n              <div class=\"page-pretitle\">Overview</div>\n              <h2 class=\"page-title\">Dashboard</h2>\n            </div>\n            <!-- Page title actions -->\n            <div class=\"col-auto ms-auto d-print-none\">\n              <div class=\"btn-list\">\n                <a\n                  @click=\"goto_add()\"\n                  class=\"btn btn-primary d-none d-sm-inline-block add-new-partner\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#modal-report\"\n                >\n                  <!-- Download SVG icon from http://tabler-icons.io/i/plus -->\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    class=\"icon\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    stroke-width=\"2\"\n                    stroke=\"currentColor\"\n                    fill=\"none\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <path d=\"M12 5l0 14\" />\n                    <path d=\"M5 12l14 0\" />\n                  </svg>\n                  Add new partner\n                </a>\n                <span class=\"d-none d-sm-inline\">\n                  <a href=\"#\" class=\"btn logout\" @click=\"logOut()\"> Logout </a>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"page-body\">\n        <div class=\"container-xl\">\n          <div class=\"row row-deck row-cards\">\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Total Partners</div>\n                  </div>\n                  <div class=\"h1 mb-3\">{{ partners.length }}</div>\n                  <div class=\"d-flex mb-2\">\n                    <div>contact rate</div>\n                    <div class=\"ms-auto\">\n                      <span\n                        class=\"text-green d-inline-flex align-items-center lh-1\"\n                      >\n                        {{ contactPercentage }}%\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"progress progress-sm\">\n                    <div\n                      class=\"progress-bar bg-primary\"\n                      :style=\"{ width: contactPercentage + '%' }\"\n                      role=\"progressbar\"\n                      aria-valuenow=\"75\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-label=\"75% Complete\"\n                    >\n                      <span class=\"visually-hidden\">75% Complete</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">In collaboration</div>\n                    <div class=\"ms-auto lh-1\">\n                      <a\n                        class=\"dropdown-toggle text-secondary\"\n                        href=\"#\"\n                        data-bs-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        >{{ selectedCity }}</a\n                      >\n                      <div class=\"dropdown-menu dropdown-menu-end\">\n                        <a\n                          class=\"dropdown-item active\"\n                          @click=\"selectCity('SH')\"\n                          >SH</a\n                        >\n                        <a class=\"dropdown-item\" @click=\"selectCity('HZ')\"\n                          >HZ</a\n                        >\n                        <a class=\"dropdown-item\" @click=\"selectCity('BJ')\"\n                          >BJ</a\n                        >\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex\" style=\"align-items: center\">\n                    <div\n                      class=\"h1 mb-0 me-2\"\n                      style=\"width: 100px; height: 100px\"\n                    >\n                      <canvas ref=\"chart\"></canvas>\n                    </div>\n                    <div class=\"me-auto lh-1\">\n                      <span class=\"text-green\">\n                        <ul style=\"list-style-type: none; padding-left: 0\">\n                          <li\n                            v-for=\"(label, index) in labels\"\n                            :key=\"label\"\n                            style=\"\n                              display: flex;\n                              align-items: center;\n                              margin-bottom: 8px;\n                              font-size: 12px;\n                            \"\n                          >\n                            <div\n                              :style=\"{\n                                background: backgroundColors[index],\n                                width: '10px',\n                                height: '10px',\n                                marginRight: '10px',\n                              }\"\n                            ></div>\n                            {{ label }}\n                          </li>\n                        </ul>\n                        {{ currentData }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">Vertical</div>\n                  </div>\n                  <div class=\"d-flex align-items-baseline\">\n                    <div\n                      class=\"h1 mb-3 me-2\"\n                      style=\"width: 250px; height: 120px\"\n                    >\n                      <canvas\n                        ref=\"verticalChart\"\n                        width=\"220\"\n                        height=\"130\"\n                      ></canvas>\n                    </div>\n                  </div>\n                  <div id=\"chart-new-clients\" class=\"chart-sm\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"subheader\">New Partners</div>\n                    <div class=\"ms-auto lh-1\">\n                      <div class=\"dropdown\">\n                        <a\n                          class=\"text-secondary\"\n                          href=\"#\"\n                          data-bs-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          >Last {{ selectedDays }} days</a\n                        >\n                        <div class=\"dropdown-menu dropdown-menu-end\">\n                          <!-- <a class=\"dropdown-item active\" @click=\"selectedDays=7\">Last 7 days</a>\n                          <a class=\"dropdown-item\" @click=\"selectedDays=30\">Last 30 days</a>\n                          <a class=\"dropdown-item\" @click=\"selectedDays=90\">Last 90 days</a> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex align-items-baseline\">\n                    <div class=\"me-auto\">\n                      <canvas\n                        ref=\"newPartnersChart\"\n                        width=\"220\"\n                        height=\"130\"\n                      ></canvas>\n                    </div>\n                  </div>\n                  <div id=\"chart-active-users\" class=\"chart-sm\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div\n              class=\"col-lg-6\"\n              v-if=\"\n                user.identity == 'Super-Admin' ||\n                user.identity == 'PM' ||\n                user.identity == 'Team-Leader' ||\n                user.identity === 'BA'\n              \"\n            >\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex align-items-center\">\n                    <h4 class=\"subheader\">Partner Marketing Data</h4>\n                    <div class=\"ms-auto lh-1\"></div>\n\n                    <a\n                      class=\"dropdown-toggle\"\n                      href=\"#\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                      >Cluster {{ dashboardCity }} Data</a\n                    >\n                    <div class=\"dropdown-menu dropdown-menu-end\">\n                      <a\n                        class=\"dropdown-item active\"\n                        @click=\"dashboardCity = 'SH'\"\n                        >SH</a\n                      >\n                      <a class=\"dropdown-item\" @click=\"dashboardCity = 'HZ'\"\n                        >HZ</a\n                      >\n                      <a class=\"dropdown-item\" @click=\"dashboardCity = 'BJ'\"\n                        >BJ</a\n                      >\n                    </div>\n                  </div>\n                  <div id=\"chart-mentions\" class=\"chart-lg\">\n                    <canvas ref=\"dashboardOnePartnerType\"></canvas>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"col-lg-6\"\n              v-if=\"\n                user.identity == 'Super-Admin' ||\n                user.identity == 'PM' ||\n                user.identity == 'Team-Leader' ||\n                user.identity === 'BA'\n              \"\n            >\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <h6 class=\"card-title\">\n                    Cluster {{ dashboardCity }} & Partner Type:\n                    <strong>{{ dashboardSelectType }}</strong>\n                  </h6>\n                  <div class=\"ratio ratio-21x9\">\n                    <div>\n                      <div id=\"map-world\" class=\"w-100 h-100\">\n                        <canvas ref=\"dashboardTwoPartnerData\"></canvas>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button\n              v-if=\"user.identity === 'Super-Admin' || user.identity === 'BA'\"\n              class=\"btn btn-outline-success\"\n              @click=\"exportMarketingData()\"\n            >\n              export marketing data\n            </button>\n            <span\n              v-if=\"user.identity === 'DB' || user.identity === 'Super-Admin'\"\n            >\n              upload marketing data\n              <input type=\"file\" @change=\"uploadMarketingData($event)\" />\n            </span>\n            <div class=\"col-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h3 class=\"card-title\">Partner list</h3>\n                </div>\n                <div class=\"card-body border-bottom py-3\">\n                  <div class=\"d-flex\">\n                    <div class=\"text-secondary\">\n                      Show\n                      <div class=\"mx-2 d-inline-block\">\n                        <input\n                          type=\"text\"\n                          class=\"form-control form-control-sm\"\n                          value=\"8\"\n                          size=\"3\"\n                          aria-label=\"Invoices count\"\n                        />\n                      </div>\n                      entries\n                    </div>\n\n                    <div class=\"ms-auto text-secondary\">\n                      Search:\n                      <div class=\"ms-2 d-inline-block\">\n                        <input\n                          v-model=\"filterInput\"\n                          type=\"text\"\n                          class=\"form-control form-control-sm\"\n                          aria-label=\"Search invoice\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <table\n                    class=\"table card-table table-vcenter text-nowrap datatable\"\n                  >\n                    <thead>\n                      <tr>\n                        <th class=\"w-1\">\n                          <input\n                            class=\"form-check-input m-0 align-middle\"\n                            type=\"checkbox\"\n                            aria-label=\"Select all invoices\"\n                          />\n                        </th>\n                        <th>Partner Type</th>\n                        <th>Partner Name</th>\n                        <th>2B/2C</th>\n                        <th>Vertical</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody v-if=\"user\">\n                      <tr v-for=\"partner in paginatedData\" :key=\"partner._id\">\n                        <td>\n                          <input\n                            class=\"form-check-input m-0 align-middle\"\n                            type=\"checkbox\"\n                            aria-label=\"Select invoice\"\n                          />\n                        </td>\n                        <td>\n                          {{ partner.third_partner_type }}\n                        </td>\n                        <td>\n                          <span class=\"flag flag-country-us\"></span>\n                          {{ partner.third_partner_name }}\n                        </td>\n                        <td>{{ partner.b2b_or_b2c }}</td>\n                        <td>{{ partner.vertical }}</td>\n                        <td class=\"text-end\">\n                          <router-link\n                            class=\"single-partner\"\n                            :to=\"'/single-partner/' + partner._id\"\n                          >\n                            <button\n                              class=\"btn btn-primary\"\n                              style=\"\n                                --bs-btn-padding-y: 0.25rem;\n                                --bs-btn-padding-x: 0.5rem;\n                                --bs-btn-font-size: 0.75rem;\n                              \"\n                            >\n                              detials\n                            </button>\n                          </router-link>\n                          <button\n                            class=\"btn btn-dark\"\n                            style=\"\n                              --bs-btn-padding-y: 0.25rem;\n                              --bs-btn-padding-x: 0.5rem;\n                              --bs-btn-font-size: 0.75rem;\n                            \"\n                            data-bs-toggle=\"dropdown\"\n                            @click=\"() => showDeleteDialog(partner._id)\"\n                            v-if=\"\n                              user.identity == 'Super-Admin' ||\n                              user.identity == 'PM' ||\n                              user.identity == 'Team-Leader'\n                            \"\n                          >\n                            delete\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"card-footer d-flex align-items-center\">\n                  <p class=\"m-0 text-secondary\">\n                    Showing <span>1</span> to <span>8</span> of\n                    <span>16</span> entries\n                  </p>\n\n                  <ul class=\"pagination m-0 ms-auto\">\n                    <li\n                      class=\"page-item\"\n                      :class=\"{ disabled: currentPage === 1 }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\" \"\n                        @click.prevent=\"moveWindow(-1)\"\n                      >\n                        <!-- SVG for 'prev' ... -->\n                        prev\n                      </a>\n                    </li>\n\n                    <li\n                      class=\"page-item\"\n                      v-for=\"page in visiblePages\"\n                      :key=\"page\"\n                      :class=\"{ active: page === currentPage }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\"#\"\n                        @click.prevent=\"setCurrentPage(page)\"\n                        >{{ page }}</a\n                      >\n                    </li>\n\n                    <li\n                      class=\"page-item\"\n                      :class=\"{ disabled: currentPage === totalPages }\"\n                    >\n                      <a\n                        class=\"page-link\"\n                        href=\" \"\n                        @click.prevent=\"moveWindow(1)\"\n                      >\n                        next\n                        <!-- SVG for 'next' ... -->\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <DeleteDialog ref=\"ConfirmDeleteDialogRef\" @confirm=\"deleteData()\">\n  </DeleteDialog>\n</template>\n<script setup>\nimport { useRouter } from \"vue-router\";\nimport axios from \"../http\";\nimport { ref, computed, onMounted, watch, nextTick } from \"vue\";\nimport {\n  Chart,\n  DoughnutController,\n  BarController,\n  ArcElement,\n  CategoryScale,\n  Tooltip,\n  LinearScale,\n  BarElement,\n  LineController,\n  PointElement,\n  LineElement,\n  elements,\n} from \"chart.js\";\nimport { useStore } from \"vuex\";\n\nChart.register(\n  DoughnutController,\n  BarController,\n  ArcElement,\n  CategoryScale,\n  Tooltip,\n  LinearScale,\n  BarElement,\n  LineController,\n  PointElement,\n  LineElement\n);\n\nimport DeleteDialog from \"./DeleteDialog.vue\";\n\nconst ConfirmDeleteDialogRef = ref(null);\nconst deleteDialogId = ref(\"\");\n\nconst router = useRouter();\nconst store = useStore();\nconst partners = ref([]);\nconst filterInput = ref([]);\nconst user = computed(() => store.getters.user);\n\nconst exportsData = ref([]);\nconst currentPage = ref(1);\nconst pageWindowStart = ref(1); // Start page for sliding window\nconst windowSize = ref(3); // Number of pages to display in the sliding window\n\nconst itemsPerPage = ref(10);\nconst chart = ref(null);\nconst verticalChart = ref(null);\nconst labels = ref([\n  \"collaborating\",\n  \"pending collaboration\",\n  \"collaboration paused\",\n]);\nconst backgroundColors = ref([\"#0d6efd\", \"#3d8bfd\", \"#9ec5fe\"]);\nconst selectedCity = ref(\"SH\");\nconst chartInstance = ref(null); // 存储图表实例\nconst verticalChartInstance = ref(null);\n\nconst selectedDays = ref(90);\nconst newPartnersChart = ref(null);\nlet newPartnersChartInstance = ref(null);\n\nconst dashboardOnePartnerType = ref(null);\nlet dashboardOnePartnerTypeInstance = ref(null);\nconst dashboardCity = ref(\"SH\");\n\nconst dashboardTwoPartnerData = ref(null);\nlet dashboardTwoPartnerDataInstance = ref(null);\n//图表二初始化的时候，head中默认展示 third_partner_type字段的初始化值，因没有及时处理，默认手动硬编码“Click On The Left Bar To change Data”\nconst dashboardSelectType = ref(\"Click On The Left Bar To change Data \");\n\nconst getData = async () => {\n  try {\n    const response = await axios.get(\"api/partners\");\n    partners.value = response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst goto_add = () => {\n  router.push({ path: \"/add\" });\n};\n\nconst logOut = () => {\n  localStorage.removeItem(\"userToken\");\n  //config vuex store\n  store.dispatch(\"clearCurrentState\");\n  router.push({ path: \"/login\" });\n};\n\nconst showDeleteDialog = async (value) => {\n  deleteDialogId.value = value;\n  ConfirmDeleteDialogRef.value.show();\n};\n\nconst deleteData = () => {\n  const deleteID = deleteDialogId.value;\n  axios.delete(\"api/partners/delete/\" + deleteID);\n  getData();\n};\n\n//分页\nconst visiblePages = computed(() => {\n  let end = pageWindowStart.value + windowSize.value;\n  if (end > totalPages.value) end = totalPages.value;\n  return Array.from(\n    { length: end - pageWindowStart.value },\n    (_, i) => i + pageWindowStart.value\n  );\n});\n\nconst paginatedData = computed(() => {\n  const filtered = filteredData(partners.value, filterInput.value);\n  const start = (currentPage.value - 1) * itemsPerPage.value;\n  const end = currentPage.value * itemsPerPage.value;\n  return filtered.slice(start, end);\n});\n\nfunction setCurrentPage(page) {\n  currentPage.value = page;\n}\n\nfunction moveWindow(direction) {\n  const newStart = pageWindowStart.value + direction * windowSize.value;\n  if (newStart >= 1 && newStart + windowSize.value <= totalPages.value + 1) {\n    pageWindowStart.value = newStart;\n  }\n}\n\nconst totalPages = computed(() => {\n  return Math.ceil(\n    filteredData(partners.value, filterInput.value).length / itemsPerPage.value\n  );\n});\n\n//筛选器\nconst filteredData = (partners, value) => {\n  const regex = new RegExp(value, \"i\");\n  return partners.filter((partner) =>\n    Object.values(partner).some(\n      (field) => typeof field === \"string\" && regex.test(field)\n    )\n  );\n};\n\n//chart 1 数据处理\nconst contactPercentage = computed(() => {\n  const partnersWithContact = partners.value.filter((partner) => {\n    const hasSHContact =\n      partner.sh_contact && Object.keys(partner.sh_contact).length > 0;\n    const hasHZContact =\n      partner.hz_contact && Object.keys(partner.hz_contact).length > 0;\n    const hasBJContact =\n      partner.bj_contact && Object.keys(partner.bj_contact).length > 0;\n    return hasSHContact || hasHZContact || hasBJContact;\n  }).length;\n\n  if (partners.value.length === 0) return 0;\n  const percentage = (partnersWithContact / partners.value.length) * 100;\n  return parseFloat(percentage.toFixed(2));\n});\n\n//chart 2 数据处理\nconst selectCity = (city) => {\n  selectedCity.value = city;\n};\n\nconst currentData = computed(() => {\n  if (!partners.value || partners.value.length === 0) return [0, 0, 0];\n\n  const statusMapping = {\n    \"A. 待合作\": \"待合作\",\n    \"C. 合作中\": \"合作中\",\n    \"B. 合作暂停\": \"暂停合作\",\n  };\n  const counts = {\n    合作中: 0,\n    待合作: 0,\n    暂停合作: 0,\n  };\n\n  partners.value.forEach((partner) => {\n    let trackingProcess;\n\n    switch (selectedCity.value) {\n      case \"SH\":\n        trackingProcess = partner.SH_tracking_process || null;\n        break;\n      case \"HZ\":\n        trackingProcess = partner.HZ_tracking_process || null;\n        break;\n      case \"BJ\":\n        trackingProcess = partner.BJ_tracking_process || null;\n        break;\n      default:\n        trackingProcess = null;\n    }\n\n    if (trackingProcess && statusMapping[trackingProcess]) {\n      const key = statusMapping[trackingProcess];\n      if (counts[key] !== undefined) {\n        counts[key]++;\n      }\n    }\n  });\n  return [counts[\"合作中\"], counts[\"待合作\"], counts[\"暂停合作\"]];\n});\n\n//chart 1\nconst initChart = () => {\n  const ctx = chart.value.getContext(\"2d\");\n  chartInstance.value = new Chart(ctx, {\n    type: \"doughnut\",\n    data: {\n      labels: labels.value,\n      datasets: [\n        {\n          data: currentData.value, // 注意这里使用 `.value` 获取计算属性的值\n          backgroundColor: backgroundColors.value,\n        },\n      ],\n    },\n    options: {\n      cutout: \"80%\",\n      responsive: true,\n      maintainAspectRatio: false,\n    },\n  });\n};\n//verical chart\nconst createChart = () => {\n  const frequencyMap = new Map();\n\n  for (const partner of partners.value) {\n    if (partner && partner.vertical) {\n      const count = frequencyMap.get(partner.vertical) || 0;\n      frequencyMap.set(partner.vertical, count + 1);\n    }\n  }\n\n  const verticalLabels = Array.from(frequencyMap.keys());\n  const verticalData = Array.from(frequencyMap.values());\n\n  if (verticalChartInstance.value) {\n    verticalChartInstance.value.destroy();\n  }\n  const ctx2 = verticalChart.value.getContext(\"2d\");\n  verticalChartInstance.value = new Chart(ctx2, {\n    type: \"bar\",\n    data: {\n      labels: verticalLabels,\n      datasets: [\n        {\n          label: \"Count\",\n          data: verticalData,\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n          borderColor: \"rgba(75, 192, 192, 1)\",\n          borderWidth: 1,\n        },\n      ],\n    },\n    options: {\n      responsive: false,\n      scales: {\n        x: {\n          type: \"category\",\n          maxBarThickness: 10,\n        },\n        y: {\n          type: \"linear\",\n          title: {\n            display: true,\n            text: \"Count\",\n          },\n          beginAtZero: true,\n        },\n      },\n    },\n  });\n};\n//chart 4\nconst updateChart = () => {\n  if (newPartnersChartInstance && newPartnersChartInstance.value) {\n    // 根据 selectedDays 计算数据\n    const newData = countNewPartners(selectedDays);\n    // 更新图表实例的数据\n    newPartnersChartInstance.value.data.datasets[0].data = newData;\n\n    // 重绘图表以显示新数据\n    newPartnersChartInstance.value.update();\n  }\n};\n\n//chart 4\nconst countNewPartners = (days) => {\n  const now = new Date();\n  // 创建 UTC 时间的 cutoffDate\n  const cutoffDate = new Date(\n    Date.UTC(\n      now.getUTCFullYear(),\n      now.getUTCMonth(),\n      now.getUTCDate() - days,\n      0,\n      0,\n      0\n    )\n  );\n  const filteredPartners = partners.value.filter(\n    (partner) => new Date(partner.date) >= cutoffDate\n  );\n  return filteredPartners.length;\n};\n\n//chart 4\nconst createNewPartnersChart = () => {\n  const ctx = newPartnersChart.value.getContext(\"2d\");\n  newPartnersChartInstance = new Chart(ctx, {\n    type: \"line\",\n    data: {\n      labels: [\"Last 7 Days\", \"Last 30 Days\", \"Last 90 Days\"],\n      datasets: [\n        {\n          label: \"New Partners\",\n          data: [\n            countNewPartners(7),\n            countNewPartners(30),\n            countNewPartners(90),\n          ],\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n          ],\n          borderColor: [\n            \"rgba(255, 99, 132, 1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  });\n};\n\n//dashboard 1\nconst prepareChartData = (dashboardCity) => {\n  const leadsField = `${dashboardCity.toLowerCase()}_marketing_data_leads`;\n  const dataField = `${dashboardCity.toLowerCase()}_marketing_data`;\n\n  const groupedData = partners.value.reduce((acc, partner) => {\n    const type = partner.third_partner_type;\n    if (!acc[type]) {\n      acc[type] = { totalLeads: 0, weightedDataSum: 0 };\n    }\n\n    const leads = Number(partner[leadsField]) || 0;\n    const dataFieldValue = partner[dataField];\n    const dataPercentage = dataFieldValue\n      ? parseFloat(dataFieldValue.replace(\"%\", \"\"))\n      : 0;\n\n    acc[type].totalLeads += leads;\n    acc[type].weightedDataSum += (leads * dataPercentage) / 100;\n\n    return acc;\n  }, {});\n\n  const chartData = Object.entries(groupedData).map(([type, data]) => ({\n    type: type,\n    leads: data.totalLeads,\n    dataPercentage:\n      data.totalLeads > 0 ? (data.weightedDataSum / data.totalLeads) * 100 : 0,\n  }));\n\n  chartData.sort((a, b) => b.leads - a.leads);\n  return chartData;\n};\n\nconst updateDashboardChart = (value) => {\n  if (\n    !dashboardOnePartnerTypeInstance ||\n    !dashboardOnePartnerTypeInstance.data\n  ) {\n    console.error(\"Chart instance or chart data is undefined\");\n    return;\n  }\n\n  let chartData = prepareChartData(value);\n  dashboardOnePartnerTypeInstance.data.labels = chartData.map(\n    (item) => item.type\n  );\n  dashboardOnePartnerTypeInstance.data.datasets[0].data = chartData.map(\n    (item) => item.leads\n  );\n  dashboardOnePartnerTypeInstance.data.datasets[1].data = chartData.map(\n    (item) => item.dataPercentage\n  );\n  dashboardOnePartnerTypeInstance.update();\n};\n\nconst createMixedChart = () => {\n  const ctx = dashboardOnePartnerType.value.getContext(\"2d\");\n  dashboardOnePartnerTypeInstance = new Chart(ctx, {\n    type: \"bar\",\n    data: {\n      labels: [], // 初始化时标签为空\n      datasets: [\n        {\n          label: \"Leads\",\n          data: [], // 初始化时数据为空\n          backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n          yAxisID: \"y-axis-1\",\n        },\n        {\n          label: \"Data Percentage\",\n          data: [], // 初始化时数据为空\n          type: \"line\",\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          yAxisID: \"y-axis-2\",\n        },\n      ],\n    },\n    options: {\n      scales: {\n        \"y-axis-1\": {\n          type: \"linear\",\n          display: true,\n          position: \"left\",\n        },\n        \"y-axis-2\": {\n          type: \"linear\",\n          display: true,\n          position: \"right\",\n          grid: {\n            drawOnChartArea: false,\n          },\n          ticks: {\n            callback: function (value) {\n              return value + \"%\";\n            },\n          },\n        },\n      },\n      onClick: (event, activeElements) => {\n        if (activeElements.length > 0) {\n          const dataIndex = activeElements[0].index;\n          const type = dashboardOnePartnerTypeInstance.data.labels[dataIndex];\n          dashboardSelectType.value = type;\n          updateSecondChart(dashboardSelectType.value);\n        }\n      },\n    },\n  });\n};\n\nconst createDashboardTwoChart = (initialDateBoard) => {\n  const ctx = dashboardTwoPartnerData.value.getContext(\"2d\");\n  dashboardTwoPartnerDataInstance = new Chart(ctx, {\n    type: \"bar\", // 主类型设置为柱状图\n    data: {\n      labels: initialDateBoard.labels,\n      datasets: [\n        {\n          label: \"Leads\",\n          data: initialDateBoard.leads,\n          backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n          yAxisID: \"y-axis-1\", // 指定使用左侧的 y 轴\n        },\n        {\n          label: \"Data Percentage\",\n          data: initialDateBoard.percentages,\n          type: \"line\", // 设置此数据集为折线图类型\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          yAxisID: \"y-axis-2\", // 指定使用右侧的 y 轴\n        },\n      ],\n    },\n    options: {\n      scales: {\n        \"y-axis-1\": {\n          type: \"linear\",\n          display: true,\n          position: \"left\",\n        },\n        \"y-axis-2\": {\n          type: \"linear\",\n          display: true,\n          position: \"right\",\n          grid: {\n            drawOnChartArea: false,\n          },\n          ticks: {\n            callback: function (value) {\n              return value + \"%\";\n            },\n            beginAtZero: true, // 确保百分比轴从 0% 开始\n          },\n        },\n      },\n    },\n  });\n};\n\n//对图表二的初始化数据的处理\nconst getInitialDataForDashboardTwo = (dashboardCity) => {\n  const leadsField = `${dashboardCity.toLowerCase()}_marketing_data_leads`;\n\n  // 累加每个类型的 leads\n\n  const typeLeadsSum = partners.value.reduce((acc, partner) => {\n    const type = partner.third_partner_type;\n    const leads = Number(partner[leadsField]) || 0;\n    acc[type] = (acc[type] || 0) + leads;\n    return acc;\n  }, {});\n\n  // 找出 leads 最高的类型\n  const highestLeadsType = Object.entries(typeLeadsSum).sort(\n    (a, b) => b[1] - a[1]\n  )[0][0];\n  // 根据找到的类型，筛选并排序 partners\n  const filteredPartners = partners.value\n    .filter((partner) => partner.third_partner_type === highestLeadsType)\n    .sort((a, b) => b[leadsField] - a[leadsField]);\n\n  // 提取用于图表显示的数据\n  const labels = filteredPartners.map((partner) => partner.third_partner_name);\n  const leads = filteredPartners.map((partner) => partner[leadsField]);\n  const percentages = filteredPartners.map((partner) => {\n    const percentageValue =\n      partner[`${dashboardCity.toLowerCase()}_marketing_data`];\n    return percentageValue ? parseFloat(percentageValue.replace(\"%\", \"\")) : 0;\n  });\n\n  return { labels, leads, percentages, type: highestLeadsType };\n};\n\nconst updateSecondChart = (type) => {\n  // 根据label获取新的数据\n  const newData = getNewDataForSecondChart(dashboardCity.value, type);\n\n  // 更新第二个图表的数据\n  dashboardTwoPartnerDataInstance.data.labels = newData.labels;\n  dashboardTwoPartnerDataInstance.data.datasets[0].data = newData.leads;\n  dashboardTwoPartnerDataInstance.data.datasets[1].data = newData.percentages;\n  dashboardTwoPartnerDataInstance.update();\n};\n\nconst getNewDataForSecondChart = (dashboardCity, type) => {\n  const leadsField = `${dashboardCity.toLowerCase()}_marketing_data_leads`;\n  const dataField = `${dashboardCity.toLowerCase()}_marketing_data`;\n\n  // 过滤出匹配的 partners 并按照 leads 数量排序\n  const filteredPartners = partners.value\n    .filter((partner) => partner.third_partner_type === type)\n    .sort((a, b) => b[leadsField] - a[leadsField])\n    .slice(0, 10); // 取前十名\n\n  // 提取数据用于图表显示\n  const labels = filteredPartners.map((partner) => partner.third_partner_name);\n  const leads = filteredPartners.map((partner) => partner[leadsField]);\n  const percentages = filteredPartners.map((partner) => {\n    const percentageValue = partner[dataField];\n    return percentageValue ? parseFloat(percentageValue.replace(\"%\", \"\")) : 0;\n  });\n\n  return { labels, leads, percentages };\n};\n\nconst updateDashboardTwoForNewCity = (newCity) => {\n  const newDashboardTwoData = getInitialDataForDashboardTwo(newCity);\n\n  if (dashboardTwoPartnerDataInstance && dashboardTwoPartnerDataInstance.data) {\n    dashboardTwoPartnerDataInstance.data.labels = newDashboardTwoData.labels;\n    dashboardTwoPartnerDataInstance.data.datasets[0].data =\n      newDashboardTwoData.leads;\n    dashboardTwoPartnerDataInstance.data.datasets[1].data =\n      newDashboardTwoData.percentages;\n    dashboardTwoPartnerDataInstance.update();\n  } else {\n    // 如果图表实例不存在，则创建新的图表\n    createDashboardTwoChart(newDashboardTwoData);\n  }\n};\n\nonMounted(async () => {\n  const fetchDataAndInitChart = async () => {\n    await getData();\n    const initialDateBoard = getInitialDataForDashboardTwo(dashboardCity.value);\n    countNewPartners(selectedDays.value);\n    initChart();\n    createNewPartnersChart();\n    updateChart();\n    createMixedChart();\n    nextTick(() => {\n      updateDashboardChart(dashboardCity.value);\n      getInitialDataForDashboardTwo(dashboardCity.value);\n    });\n\n    createDashboardTwoChart(initialDateBoard);\n  };\n  fetchDataAndInitChart();\n});\n\nwatch(\n  dashboardCity,\n  (newValue) => {\n    if (\n      dashboardOnePartnerTypeInstance &&\n      dashboardOnePartnerTypeInstance.data\n    ) {\n      updateDashboardChart(newValue);\n    }\n  },\n  { immediate: true }\n);\n\nwatch(selectedDays, () => {\n  updateChart();\n});\n\nwatch(currentData, (newData) => {\n  if (chartInstance.value) {\n    chartInstance.value.destroy(); // 销毁旧实例\n    // 重新实例化新图表\n    const ctx = chart.value.getContext(\"2d\");\n    chartInstance.value = new Chart(ctx, {\n      type: \"doughnut\",\n      data: {\n        labels: labels.value,\n        datasets: [{ data: newData, backgroundColor: backgroundColors.value }],\n      },\n      options: {\n        cutout: \"80%\",\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    });\n  }\n});\nwatch(\n  partners,\n  (newVal) => {\n    if (newVal && newVal.length > 0) {\n      createChart();\n    }\n  },\n  { deep: true }\n);\n\n//upload function\nconst uploadFile = async (event) => {\n  const file = event.target.files[0];\n  const formData = new FormData();\n  formData.append(\"csv\", file);\n  try {\n    await axios.post(\"api/partners/upload\", formData);\n    alert(\"上传成功！\");\n  } catch (err) {\n    alert(\"上传失败：\" + err.message);\n  }\n};\n//old function export all data\nconst exportToCSV = () => {\n  axios\n    .get(\"api/partners/export\")\n    .then((res) => {\n      exportsData.value = res.data;\n      const csv = [];\n      const headers = Object.keys(exportsData.value[0]);\n      csv.push(headers.join(\",\")); // 添加表头行\n\n      for (const partner of exportsData.value) {\n        const row = [];\n        for (const header of headers) {\n          let value = partner[header];\n          if (value !== null && value !== undefined) {\n            value = value.toString().replace(/\"/g, '\"\"'); // 转换为字符串并处理双引号\n            if (value.indexOf(\",\") >= 0 || value.indexOf(\"\\n\") >= 0) {\n              value = `\"${value}\"`; // 包含逗号或换行符的字段用双引号包围\n            }\n          } else {\n            value = \"\"; // 如果值为 null 或 undefined，使用空字符串\n          }\n          row.push(value);\n        }\n        csv.push(row.join(\",\")); // 添加每条数据的行\n      }\n\n      const csvContent = csv.join(\"\\n\");\n      const blob = new Blob([csvContent], {\n        type: \"text/csv;charset=utf-8;\",\n      });\n\n      const downloadLink = document.createElement(\"a\");\n      const url = URL.createObjectURL(blob);\n\n      downloadLink.href = url;\n      downloadLink.download = \"data.csv\";\n      downloadLink.click();\n\n      URL.revokeObjectURL(url);\n    })\n    .catch((err) => console.log(err));\n};\n\n//new export marketing data\nconst exportMarketingData = () => {\n  axios\n    .get(\"api/partners/export/marketing\", { responseType: \"blob\" })\n    .then((res) => {\n      const csvContent = res.data; // 直接获取Blob数据\n      const downloadLink = document.createElement(\"a\");\n      const url = URL.createObjectURL(csvContent);\n\n      downloadLink.href = url;\n      downloadLink.download = \"partners.csv\";\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n\n      URL.revokeObjectURL(url);\n    })\n    .catch((err) => console.log(err));\n};\n\nconst uploadMarketingData = (event) => {\n  const file = event.target.files[0];\n  if (file) {\n    uploadMarketingFile(file);\n  } else {\n    console.log(\"No file selected\");\n  }\n};\n\nconst uploadMarketingFile = (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  axios\n    .post(\"/api/partners/upload/marketing\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n    .then((response) => {\n      console.log(\"File uploaded successfully\", response.data);\n    })\n    .catch((error) => {\n      console.error(\"Error uploading file:\", error.response.data);\n    });\n};\n</script>\n\n<style scoped>\n.page-wrapper {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n.page-body {\n  margin-top: 1.25rem;\n  margin-bottom: 1.25rem;\n}\n@media (min-width: 1200px) {\n  .container,\n  .container-lg,\n  .container-md,\n  .container-sm,\n  .container-xl {\n    max-width: 1199px;\n  }\n}\n.container,\n.container-fluid,\n.container-lg,\n.container-md,\n.container-sm,\n.container-xl,\n.container-xxl {\n  width: 100%;\n  padding-right: var(--tblr-gutter-x, 0.5rem);\n  padding-left: var(--tblr-gutter-x, 0.5rem);\n  margin-right: auto;\n  margin-left: auto;\n}\n.row-deck > .col,\n.row-deck > [class*=\"col-\"] {\n  display: flex;\n  align-items: stretch;\n}\n.row > * {\n  min-width: 0;\n}\n.row-deck > .col .card,\n.row-deck > [class*=\"col-\"] .card {\n  flex: 1 1 auto;\n}\n.card {\n  box-shadow: rgba(35, 46, 60, 0.04) 0 2px 4px 0;\n  border: 1px solid rgba(101, 109, 119, 0.16);\n}\n@media (min-width: 992px) {\n  .col-lg-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n}\n@media (min-width: 992px) {\n  .col-lg-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n}\n.row-cards .row-cards {\n  flex: 1;\n}\n.row-cards {\n  --tblr-gutter-x: 1rem;\n  --tblr-gutter-y: 1rem;\n}\n.row > * {\n  max-width: 100%;\n  padding-right: calc(var(--tblr-gutter-x) / 2);\n  padding-left: calc(var(--tblr-gutter-x) / 2);\n  margin-top: var(--tblr-gutter-y);\n}\n.card-header:first-child {\n  border-radius: 3px 3px 0 0;\n}\n.position-relative {\n  position: relative !important;\n}\n.page-pretitle {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #656d77;\n  display: flex;\n}\n.page-title {\n  margin: 0;\n  font-size: 1.25rem;\n  line-height: 1.4;\n  font-weight: 500;\n  color: inherit;\n  display: flex;\n  align-items: center;\n}\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  border-color: rgba(101, 109, 119, 0.24);\n  white-space: nowrap;\n}\n.btn-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -0.5rem !important;\n  margin-right: -0.5rem;\n}\n.btn-list > * {\n  margin: 0 0.5rem 0.5rem 0 !important;\n}\n.logout {\n  background-color: #fff;\n  color: #216bc4;\n}\n.add-new-partner {\n  background-color: #216bc4;\n  color: #f4f6fa;\n}\n.btn .icon {\n  width: 1.25rem;\n  height: 1.25rem;\n  min-width: 1.25rem;\n  margin: 0 0.5rem 0 -0.25rem;\n  vertical-align: middle;\n}\n@media (min-width: 576px) {\n  .d-sm-inline {\n    display: inline !important;\n  }\n}\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=810a9c18&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jiandongz/Desktop/vue-partner-system/vue3-deploy/client/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-810a9c18\"]])\n\nexport default __exports__"],"names":["isToastShowing","ref","alertClass","computed","props","statusCode","show","nextTick","toastElement","document","querySelector","toastInstance","bootstrap","Toast","value","closeToast","hide","expose","__exports__","useToast","showToast","message","console","log","mountPoint","createElement","body","appendChild","toastApp","createApp","mount","setTimeout","unmount","removeChild","axios","config","localStorage","userToken","headers","Authorization","error","Promise","reject","response","data","status","async","errorMessage","removeItem","router","exports","sfc","target","__vccOpts","key","val","visible","confirm","emit","cancel","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","animations","applyLayoutsDefaults","autoPadding","padding","top","right","bottom","left","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","rej","resolved","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","plugin_tooltip","_element","afterInit","_args","afterDraw","afterEvent","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","LogarithmicScale","_zero","changeExponent","generateTicks","RadialLinearScale","animate","angleLines","pointLabels","centerPointLabels","xCenter","yCenter","drawingArea","_pointLabels","_pointLabelItems","_padding","getTickBackdropHeight","fitWithPointLabels","setCenterPoint","leftMovement","rightMovement","topMovement","bottomMovement","getIndexAngle","angleMultiplier","getDistanceFromCenterForValue","scalingFactor","getValueForDistanceFromCenter","scaledDistance","getPointLabelContext","pointLabel","createPointLabelContext","getPointPosition","distanceFromCenter","additionalAngle","getPointPositionForValue","getBasePosition","getPointLabelPosition","pathRadiusLine","drawPointLabels","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","ConfirmDeleteDialogRef","deleteDialogId","useRouter","store","useStore","partners","filterInput","user","getters","currentPage","pageWindowStart","windowSize","itemsPerPage","verticalChart","backgroundColors","selectedCity","chartInstance","verticalChartInstance","selectedDays","newPartnersChart","newPartnersChartInstance","dashboardOnePartnerType","dashboardOnePartnerTypeInstance","dashboardCity","dashboardTwoPartnerData","dashboardTwoPartnerDataInstance","dashboardSelectType","getData","err","goto_add","logOut","dispatch","showDeleteDialog","deleteData","deleteID","visiblePages","totalPages","_","paginatedData","filtered","filteredData","setCurrentPage","page","moveWindow","newStart","regex","RegExp","partner","test","contactPercentage","partnersWithContact","hasSHContact","sh_contact","hasHZContact","hz_contact","hasBJContact","bj_contact","percentage","toFixed","selectCity","city","currentData","statusMapping","counts","合作中","待合作","暂停合作","trackingProcess","SH_tracking_process","HZ_tracking_process","BJ_tracking_process","initChart","createChart","frequencyMap","verticalLabels","verticalData","ctx2","updateChart","newData","countNewPartners","days","cutoffDate","UTC","getUTCFullYear","getUTCMonth","getUTCDate","filteredPartners","createNewPartnersChart","prepareChartData","leadsField","dataField","groupedData","third_partner_type","totalLeads","weightedDataSum","leads","dataFieldValue","dataPercentage","chartData","updateDashboardChart","createMixedChart","updateSecondChart","createDashboardTwoChart","initialDateBoard","percentages","getInitialDataForDashboardTwo","typeLeadsSum","highestLeadsType","third_partner_name","percentageValue","getNewDataForSecondChart","onMounted","fetchDataAndInitChart","watch","newValue","immediate","newVal","deep","exportMarketingData","responseType","csvContent","downloadLink","url","URL","createObjectURL","href","download","click","revokeObjectURL","catch","uploadMarketingData","file","files","uploadMarketingFile","formData","FormData","append"],"sourceRoot":""}